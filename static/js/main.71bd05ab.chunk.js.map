{"version":3,"sources":["pages/home.js","pages/recommendations.js","pages/tinderCards.js","pages/userSelection.js","pages/gettingToKnow.js","pages/SwipeTest.js","pages/recommendationsA.js","pages/checkBox.js","pages/profile.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","React","Component","styled","div","props","sliding","dir","capitalizeFLetter","string","returnVal","toUpperCase","slice","e","perc2color","perc","r","g","Math","round","b","toString","sleep","milliseconds","Promise","resolve","setTimeout","Recommendations","state","foods","tags","images","recipe","nutrition","ingredients","similar","socket","initialiseSocket","sendable","generateMeal","bind","getRecommendations","switchViews","generateView","resetSwipes","generateFavorites","goToFavorites","goToRecommends","generateBadges","swipeItem","saveAlert","createCards","onopen","users","JSON","parse","localStorage","getItem","payload","action","i","length","Name","favorites","Liked","name","send","stringify","loading","favorite","onmessage","message","translation","data","console","log","Swal","fire","title","showConfirmButton","timer","FirstTime1","text","icon","confirmButtonText","then","clickConfirm","FirstTime2","setItem","initialfoods","recommends","initialtags","initialimages","shuffled","filterfoods","filteredfoods","filteredTags","filteredImages","setState","initialised","view","swipednumber","value","FirstTime3","undefined","array","array2","array3","temporaryValue","randomIndex","currentIndex","floor","random","answer","push","shuffle","newinitialfoods","newinitialtags","newinitialimages","likedItems","dislikedItems","Disliked","filteredFoods","filteredtags","filteredimages","p","includes","this","WebSocket","sendRecipe","sendNuttritionSimilar","toLowerCase","ingredipayload","similarpayload","prolist","item","proto","allowOutsideClick","rating","tempUserIndex","size","Length","DisLiked","account","vegan","easy","preparation","amount","names","Preferences","likes","booleansPreferences","k","nutritionLabels","nutritionalInfo","getNutritionInfo","nutritionalInfoHtml","nutritionalInfoHtmlTemp","nutritionalInfoHtmlTemp2","explanationHtmlTemp","similarMeals","getExplanation","empty","number","color","onClick","align","src","alt","style","backgroundColor","modal","trigger","image","recept","getRecipe","recipeHtmlTemp","getIngredients","popUpHtml","ingredientsHtmlTemp","html","position","open","opened","logAction","closeOnDocumentClick","nutritionopened","gerecht","thisCard","dislike","like","getFavorites","refName","ref","recipePopupFromImage","getname","getimage","recipePopupForTinder","nutritionalPopupForTinder","id","tagName","setStack","stack","stackEl","throwoutleft","throwoutright","currentfavorite","badges","forEach","index","badgeName","config","onSwiped","endSwipe","onSwipedLeft","unlike","display","preventDefaultTouchmoveEvent","trackMouse","transition","delta","swipingspecials","showThumbs","abs","shadownr","onSwiping","eventData","swiped","onMouseEnter","onMouseLeave","transform","transformfunc","opacity","transparfunc","recipePopup","nutritionalPopup","food","assets","getAssets","content","onSwipedRight","transparency","f2","liked","t","j","newliked","splice","disliked","thisAction","thisItem","Date","now","v","Log","swiping","deltaX","item2","tutor","wrapperStyles","width","height","actionsStyles","justifyContent","marginTop","TinderCards","remove","cards","indexOf","buttons","left","right","onAfterSwipe","onSwipe","zIndex","UserProfile","handleChange","event","target","tempUsers","alreadyInUsers","emptyDict","Allergies","FirstTime","booleanAllergies","ctrlKey","charCode","logForUser","s","type","placeholder","username","onChange","onKeyPress","handleTest","updateUsers","SwipeTest","context","createRef","RecommendationsA","Checkbox","toggleChange","isChecked","prefs","all","checked","for","Profile","onTextChangedLiked","suggestions","regex","RegExp","items","sort","filter","test","suggestionsLiked","textLiked","onTextChangedDisliked","suggestionsDisliked","textDisliked","alreadySet","amountOfLikes","amountOfDislikes","boxes","getItemLocal","success","updateAccount","tempIndex","returnList","class","renderSuggestionsLiked","doChange","renderSuggestionsDisliked","map","suggestionSelectedLiked","suggestionSelectedDisliked","buttonNb","getRender","renderButton","App","startwebsocket","basename","exact","path","component","UserSelection","f","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71bd05ab.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LandingPage.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"Circle\">\r\n\r\n                </div>\r\n                <h1 className=\"fadeInLeft1\">Welcome!</h1>\r\n                <p className=\"textLanding fadeInLeft2\">Let's get you started.</p>\r\n                <Link to=\"/profile\">\r\n                    <button className=\"StartButton fadeInLeft3\"><b>CONTINUE</b></button>\r\n                </Link>\r\n                <div className='plate1 fadeInRight1'> </div>\r\n                <div className='plate2 fadeInRight2'> </div>\r\n                <div className='plate3 fadeInRight3'> </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal, {clickConfirm} from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nimport {  Popup as InfoPopup } from \"semantic-ui-react\";\r\nimport ReactSwing from \"react-swing\";\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\n\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nclass Recommendations extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        this.socket=this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.goToRecommends=this.goToRecommends.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        this.saveAlert = this.saveAlert.bind(this);\r\n        this.createCards = this.createCards.bind(this);\r\n\r\n\r\n        this.socket.onopen = () => {\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let payload= {\r\n                action: \"initialise\"\r\n            };\r\n            for (let i = users.length-1; i>=0; i--) {\r\n                if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                    let liked=users[i].Liked;\r\n                     payload={\r\n                        action: \"initialise\",\r\n                        favorites:liked,\r\n                         name: localStorage.getItem('currentUser')\r\n                    };\r\n                }\r\n            }\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                if(this.state.favorite){\r\n                    this.goToFavorites()\r\n                }\r\n                else{\r\n                    this.getRecommendations();\r\n                }\r\n            }\r\n            // do something after connection is opened\r\n        };\r\n\r\n        this.state.favorite=JSON.parse(localStorage.getItem('favorite'));\r\n\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                       // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    let users = JSON.parse(localStorage.getItem('users'));\r\n                    for (let i = users.length-1; i>=0; i--) {\r\n                        if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                            if(users[i].FirstTime1){\r\n                                Swal.fire({\r\n\r\n                                    text: \"Drag an item left to dislike it, or right to like it.\",\r\n                                    icon: 'info',\r\n                                    confirmButtonText: 'Okay!'\r\n                                }).then(() => {{\r\n                                    if (clickConfirm) {\r\n                                        Swal.fire({\r\n                                            text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n\r\n                                            icon: 'info',\r\n                                            confirmButtonText: 'Okay!'\r\n                                        }).then(() => {\r\n                                            if (clickConfirm) {\r\n                                                Swal.fire({\r\n                                                    text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                    icon: 'info',\r\n                                                    confirmButtonText: 'Okay!'\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }});\r\n                                users[i].FirstTime1 = false;\r\n                                users[i].FirstTime2 = false;\r\n                                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                            }\r\n                            else if(users[i].FirstTime2){\r\n                                Swal.fire({\r\n                                    title: \"You're getting the hang of this!\",\r\n                                    icon: 'success',\r\n                                    confirmButtonText: 'Okay!'\r\n                                }).then(() => {\r\n                                    if (clickConfirm) {\r\n                                        Swal.fire({\r\n                                            text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n\r\n                                            icon: 'info',\r\n                                            confirmButtonText: 'Okay!'\r\n                                        }).then(() => {\r\n                                            if (clickConfirm) {\r\n                                                Swal.fire({\r\n                                                    text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                    icon: 'info',\r\n                                                    confirmButtonText: 'Okay!'\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                });\r\n                                users[i].FirstTime2 = false;\r\n                                localStorage.setItem('users', JSON.stringify(users));\r\n                            }\r\n                        }\r\n                        }\r\n\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n                    localStorage.setItem(\"viewInit\", 1);\r\n                    if(JSON.parse(localStorage.getItem('viewInit'))==1 && this.state.initialised!=true){\r\n                        this.state.view=0;\r\n                        sleep(5).then(() => {\r\n                            this.state.view= JSON.parse(localStorage.getItem('viewInit'));\r\n                            if(this.state.view==1){\r\n                                this.state.swipednumber=0;\r\n                                const value = (this.state.view + 1) % 2;\r\n                                localStorage.setItem(\"view\", value);\r\n                                this.state.initialised=true;\r\n                                this.setState({view: 1});\r\n                            }\r\n                        })\r\n\r\n\r\n                    }\r\n                    break;\r\n                case \"favorites\":\r\n\r\n                    if(this.loading){\r\n                       // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                        let users = JSON.parse(localStorage.getItem('users'));\r\n                        for (let i = users.length-1; i>=0; i--) {\r\n                            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                               if(users[i].FirstTime3){\r\n                                   Swal.fire({\r\n                                       title: \"Do not lose any of your liked recipes!\",\r\n                                       text: \"You can find them here!\",\r\n                                       icon:\"info\"\r\n                                   });\r\n                                   users[i].FirstTime3 = false;\r\n                                   localStorage.setItem('users', JSON.stringify(users));\r\n                               }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                  //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n        if(this.state.swipednumber===undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n\r\n        if(this.state.favorite){\r\n            this.goToFavorites()\r\n        }\r\n        if(this.state.initialised==undefined||this.state.initialised==false){\r\n            this.state.view=0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n        }\r\n        let answer=[];\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n        if(this.socket!==undefined){\r\n            return this.socket;\r\n        }\r\n        this.setState({favorite: false});\r\n        return new WebSocket(\"ws://192.168.1.12:9000\");\r\n    }\r\n\r\n    getInfo(string) {\r\n\r\n\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n    }\r\n    sendRecipe(name) {\r\n        name=name.toLowerCase();\r\n        console.log(\"send recipe\");\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name) {\r\n        name=name.toLowerCase();\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n           if(likedItems[i]!=name){\r\n               let item = {};\r\n               item['name'] = likedItems[i];\r\n               item['rating']= 1.0;\r\n               prolist.push(item);\r\n           }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        this.state.proto=!this.state.proto;\r\n        if(this.sendable) {\r\n            if(this.state.proto){\r\n                this.socket.send(JSON.stringify(similarpayload));\r\n                Swal.fire({\r\n                    title: \"Loading...\",\r\n                    text: \"Please wait\",\r\n                    showConfirmButton: false,\r\n                    allowOutsideClick: false,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getFavorites(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        let payload = {\r\n            action: \"Favorites\",\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n\r\n        const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\",\"low-cholesterol\",\"kosher\",\"ramadan\", \"low-protein\"];\r\n        const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n\r\n        console.log(payload);\r\n\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    getRecommendations(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempUserIndex = -1;\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempUserIndex = i;\r\n                likedItems=[];\r\n                while(likedItems.size<users[i].Liked.Length||likedItems.size<7){\r\n                    let random=      Math.random(users[i].Liked.length);\r\n                    if(likedItems.includes(users[i].Liked[random],0)){\r\n                        likedItems.push(users[i].Liked[random])\r\n                    }\r\n\r\n\r\n                }\r\n                dislikedItems=[];\r\n                while(dislikedItems.size<users[i].Disliked.Length||dislikedItems.size<5){\r\n                    let random=      Math.random(users[i].DisLiked.length);\r\n                    if(dislikedItems.includes(users[i].Disliked[random],0)){\r\n                        dislikedItems.push(users[i].Disliked[random])\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n        for (let k = 0; k<names.length; k++){\r\n            names[k] = names[k].toLowerCase();\r\n        }\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        console.log(payload)\r\n        if(this.sendable) {\r\n\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.state.initialised=false;\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n        if(nutritionalInfo!==undefined){\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                    }\r\n            }\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n        nutritionalInfoHtml.push(\r\n            <div className=\"row\">\r\n                <div className=\"Nutritioncolumn\">\r\n                    <div className=\"popupTextTitle\">\r\n                        Nutritional info:\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"textrow\">\r\n                        <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                        <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"popupTextTitle2\">\r\n                        Because you liked:\r\n                        <br/>\r\n                    </div>\r\n                    {explanationHtmlTemp}\r\n                </div>\r\n            </div>\r\n\r\n        );}\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopup(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                        <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>);\r\n        return html;\r\n    }\r\n\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({opened: name});this.logAction(\"get recipe\",name)}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.opened==name} onClick={() => this.setState({opened: \"none\"})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => {this.setState({opened: \"none\"});this.logAction(\"get recipe\",name) }}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({opened: \"none\"})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined) {\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n            <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n            </img>\r\n            <Popup  open={false} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                      position=\"right center\" >\r\n                <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                    <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopened: name});this.logAction(\"get nutritional values\",name)}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopened==name} onClick={() => this.setState({nutritionopened: 'none'})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopened: \"none\"})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => {this.setState({nutritionopened: \"none\"});this.logAction(\"get nutritional values\",name)}}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n    saveAlert() {\r\n       /* Swal.fire({\r\n            title: 'Saved!',\r\n            text: \"Your liked and disliked meals are saved.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Great!'\r\n        });*/\r\n        this.getRecommendations();\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", 1);\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        let  value = (this.state.view + 1) % 2;\r\n        localStorage.setItem(\"viewInit\", value);\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n\r\n        localStorage.setItem(\"view\", value);\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(true));\r\n        this.setState({favorite: true});\r\n\r\n    }\r\n    goToRecommends(){\r\n\r\n        this.getRecommendations();\r\n\r\n        localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n        this.setState({view: 0,favorite: false, initialised: false});\r\n\r\n\r\n    }\r\n\r\n/*\r\n    generateView() {\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n                    Times clicked: {this.state.timesClicked}\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            if (this.state.view === 0) {\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>SAVE</b></button>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n            else {\r\n                if (this.state.swipednumber < 6) {\r\n                    return (\r\n                        <div className=\"Span\">\r\n                        <div style={wrapperStyles}>\r\n\r\n                            {this.state.foods.length > 0 ? (\r\n                                <div style={wrapperStyles}>\r\n\r\n                                    <Swipeable\r\n                                        buttons={({left, right}) => (\r\n                                            <div style={actionsStyles}>\r\n                                                <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                            </div>\r\n                                        )}\r\n                                        onAfterSwipe={this.remove}\r\n                                        onSwipe={this.swipeItem}\r\n                                    >\r\n\r\n                                        <div className=\"FoodCard fadeInLeft0\">\r\n                                            <div className=\"FoodHeader\">\r\n                                                <b>{capitalizeFLetter(this.getname(this.state.swipednumber))}</b>\r\n                                            </div>\r\n                                            <div className=\"table\">\r\n\r\n                                                    <div className=\"tablerow1\">\r\n                                                        {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n                                                    </div>\r\n                                                    <div className=\"tablerow2\">\r\n                                                        {this.generateBadges(this.state.swipednumber)}\r\n                                                    </div>\r\n                                                    <div className=\"tablerow3\">\r\n                                                        {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                        {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                    </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </Swipeable>\r\n\r\n                                </div>\r\n                            ) : (\r\n                                <div >\r\n                                    <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                    <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                    <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div >\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                            <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                            <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    } */\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card\"  ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{capitalizeFLetter(this.state.foods[i])}</b></div>\r\n                {this.recipePopupFromImage(this.getname(i),this.getimage(i))}\r\n                {this.generateBadges(i)}\r\n                <div className=\"tablerow3\">\r\n                    {this.recipePopupForTinder(this.state.foods[i],this.getimage(i))}\r\n                    {this.nutritionalPopupForTinder(this.state.foods[i])}\r\n                </div>\r\n            </div>)\r\n\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateView() {\r\n\r\n\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.view === 0) {\r\n\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>Recommend!</b></button>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n\r\n\r\n            else {\r\n\r\n                return (\r\n                    <div>\r\n                        <div id=\"viewport\">\r\n                            <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                            <div className=\"likeStack\"><b>Like</b></div>\r\n                            <ReactSwing\r\n                                className=\"stack\"\r\n                                tagName=\"div\"\r\n                                setStack={stack => this.setState({ stack })}\r\n                                ref={this.stackEl}\r\n                                throwoutleft={()=>this.dislike(\"\")}\r\n                                throwoutright={()=>this.like(\"\")}\r\n                            >\r\n                                {this.createCards()}\r\n                            </ReactSwing>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>Recommend!</b></button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n       // alert(JSON.stringify(favorites));\r\n        let html = [];\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n            let name =currentfavorite[\"name\"];\r\n            let image=currentfavorite[\"image\"];\r\n            let badges = [];\r\n\r\n            if(currentfavorite[\"tags\"]==undefined){\r\n\r\n            }\r\n            else{\r\n                if(currentfavorite[\"tags\"].length!=0) {\r\n\r\n\r\n                    if (currentfavorite[\"tags\"].length <= 1) {\r\n                        badges.push(<button className={\"FoodBadge \" + currentfavorite[\"tags\"]}></button>)\r\n                    } else {\r\n                        currentfavorite[\"tags\"].forEach(function (item, index) {\r\n                            let badgeName = \"FoodBadge \" + item;\r\n                            if (item === \"15-minutes-or-less\") {\r\n                                badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                            }\r\n                            badges.push(<button className={badgeName}></button>);\r\n\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedLeft:()=>this.unlike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined) {\r\n                if (this.state.showThumbs == name || this.state.translation[name] != undefined) {\r\n                    if (Math.abs(this.state.shadownr) > 10) {\r\n                        if (this.state.shadownr > 0) {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimagewithshadow2\"/>\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimage2\"/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"dislikedimage2\"/>\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} }  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={image} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(name,this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}}>\r\n                                {this.nutritionalPopup(name)}\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>);\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n            assets[food].forEach(function (item, i) {\r\n                let badgeName = \"FoodBadge \" + item;\r\n                if (item === \"15-minutes-or-less\") {\r\n                    badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                }\r\n                badges.push(<InfoPopup  position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n\r\n            });\r\n        }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>0){\r\n                if(assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<InfoPopup position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n                    });\r\n                }\r\n\r\n            }\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                            <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                                      onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                               , opacity: this.transparfunc(name)} } onClick={() => {}}  >\r\n                                <div className=\"rowbutton\">\r\n                                    <div className=\"columbuttonimage\">\r\n                                        <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                                    </div>\r\n                                    <div className=\"columtitle\">\r\n                                        <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                        <div className=\"foodtags2\">\r\n                                            <div className=\"badgesContainer\">\r\n                                                {badges}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"informationbuttonscolum\">\r\n                                        <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                            {this.recipePopup(foods[i],this.getimage(i))}\r\n                                        </div>\r\n                                        <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}} >\r\n                                            {this.nutritionalPopup(foods[i])}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                </Swiping>\r\n                        </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    like(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t=0;\r\n                for(let j=0;j<foods.length;j++){\r\n                    if(foods[j]!=undefined){\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if(f1===f2){\r\n                            t=j;\r\n                        }\r\n                    }\r\n                }\r\n\r\n               // alert(liked.length);\r\n                if( liked.length==undefined){\r\n                    let newliked=[];\r\n                    if(liked!=undefined){\r\n                        newliked.push(liked);\r\n                    }\r\n\r\n                    newliked.push(f2);\r\n                    liked=newliked;\r\n                }\r\n                else{\r\n\r\n                    liked.push(f2);\r\n                }\r\n\r\n                foods.splice(t,1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t,1);\r\n                this.setState({tags: tags});\r\n                images.splice(t,1);\r\n                this.setState({images: images});\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n               // alert(users[i].Liked);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unlike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n\r\n                let t = 0;\r\n                for (let j = 0; j < liked.length; j++) {\r\n                    if(liked[j]!=undefined) {\r\n                        let f1 = liked[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                if (liked==undefined){\r\n                    liked=[];\r\n                }\r\n\r\n                liked.splice(t, 1);\r\n                let favorites=this.state.favorites;\r\n                favorites.splice(t,1);\r\n                this.setState({liked: liked});\r\n                this.setState({favorites: favorites});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.setState({likedItems: liked});\r\n                this.logAction(\"unlike\", name);\r\n\r\n                break;\r\n            }\r\n            this.setState({favorite:true});\r\n        }\r\n\r\n    }\r\n    dislike(name){\r\n\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    if(foods[j]!=undefined) {\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            localStorage.setItem(\"n\", \"kked\")\r\n\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t, 1);\r\n                this.setState({tags: tags});\r\n                images.splice(t, 1);\r\n                this.setState({images: images});\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n                disliked.push(f2);\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", f2);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"viewInit\")) === 0){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"swipe mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    endSwipe(){\r\n        this.setState({swiping: false});\r\n        this.setState({shadownr: 0});\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n\r\n    swiped(eventData,name) {\r\n        this.setState({swiping: true});\r\n        this.setState({shadownr: eventData.deltaX});\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n    }\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n\r\n    //RENDER\r\n    render() {\r\n\r\n        if(this.state.favorite){\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Favorites</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n        // Favorites view\r\n        else{\r\n           let  estratext;\r\n            if(this.state.tutor==undefined) {\r\n            }\r\n\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Recommendations</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        //<Link to=\"/recommendations\"><button onclick={() => localStorage.setItem(\"favorite\", JSON.stringify(true)} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n    }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, {Component} from \"react\";\r\nimport Swipeable from \"react-swipy\";\r\nimport './tinderCards.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"250px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12\r\n};\r\n\r\nclass TinderCards extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        let likedItems = [];\r\n        let dislikedItems = [];\r\n        if(localStorage.getItem(\"likedItems\") != null){\r\n            likedItems = JSON.parse(localStorage.getItem(\"likedItems\"));\r\n        }\r\n        else localStorage.setItem(\"likedItems\", JSON.stringify(likedItems));\r\n        if(localStorage.getItem(\"dislikedItems\") != null){\r\n            dislikedItems = JSON.parse(localStorage.getItem(\"dislikedItems\"));\r\n        }\r\n        else localStorage.setItem(\"dislikedItems\", JSON.stringify(dislikedItems));\r\n        this.state = {\r\n            cards: [\"little kick  jalapeno burgers\", \"hot tamale  burgers\", \"hot tamale  burgers\"],\r\n            likedItems: likedItems,\r\n            dislikedItems: dislikedItems,\r\n        };\r\n    }\r\n\r\n    remove = () =>\r\n        this.setState(({cards}) => ({\r\n            cards: cards.slice(1, cards.length),\r\n        }));\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.cards[0];\r\n\r\n\r\n        let liked = JSON.parse(localStorage.getItem(\"likedItems\"));\r\n        let disliked = JSON.parse(localStorage.getItem(\"dislikedItems\"));\r\n\r\n\r\n        if (action === 'left') {\r\n\r\n            let index = liked.indexOf(thisCard);\r\n            if(index >= 0){\r\n                liked.splice(index, 1);\r\n            }\r\n            if(!disliked.includes(thisCard)) {\r\n                disliked.push(thisCard);\r\n            }\r\n\r\n\r\n        }\r\n        else if (action === 'right') {\r\n            let index = disliked.indexOf(thisCard);\r\n            if(index >= 0){\r\n                disliked.splice(index, 1);\r\n            }\r\n            if(!liked.includes(thisCard)){\r\n                liked.push(thisCard);\r\n\r\n            }\r\n\r\n        }\r\n        this.state.likedItems = liked;\r\n        this.state.dislikedItems = disliked;\r\n        localStorage.setItem(\"likedItems\", JSON.stringify(this.state.likedItems));\r\n        localStorage.setItem(\"dislikedItems\", JSON.stringify(this.state.dislikedItems));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {cards} = this.state;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"PageHeader\"> <b className=\"PageTitle\">Recommendations</b>\r\n                    </div>\r\n                    <div style={wrapperStyles}>\r\n                        {cards.length > 0 ? (\r\n                            <div style={wrapperStyles}>\r\n                                <Swipeable\r\n                                    buttons={({left, right}) => (\r\n                                        <div style={actionsStyles}>\r\n                                            <button className=\"tinderButton dislike\" onClick={left}><b>Reject</b></button>\r\n                                            <button className=\"tinderButton like\" onClick={right}><b>Accept</b></button>\r\n                                        </div>\r\n                                    )}\r\n                                    onAfterSwipe={this.remove}\r\n                                    onSwipe={this.swipeItem}\r\n                                >\r\n                                    <div className=\"FoodCard\">\r\n                                        <div className=\"FoodHeader\">\r\n                                            <b>{cards[0]}</b>\r\n                                        </div>\r\n                                        <p>\r\n                                            Recipe goes here.\r\n                                        </p>\r\n                                    </div>\r\n                                </Swipeable>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                        )}\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass UserProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(localStorage.getItem(\"users\")===null){\r\n            let tempList = [];\r\n            localStorage.setItem(\"users\", JSON.stringify(tempList));\r\n        }\r\n        this.state = {\r\n            name : \"\"\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n    updateUsers(){\r\n\r\n        let tempUsers = JSON.parse(localStorage.getItem('users'));\r\n        let alreadyInUsers = false;\r\n        for (let i = 0; i<tempUsers.length;i++){\r\n            if(tempUsers[i].Name === this.state.name) {\r\n                alreadyInUsers = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!alreadyInUsers){\r\n            let emptyDict = {\r\n                Name: this.state.name,\r\n                Preferences: [\"vegan\", \"vegetarian\", \"gluten-free\"],\r\n                Allergies: [\"nuts\", \"lactose\", \"seafood\"],\r\n                Log: [],\r\n                Liked: [],\r\n                Disliked: [],\r\n                FirstTime: true,\r\n                FirstTime1: true,\r\n                FirstTime2: true,\r\n                FirstTime3: true,\r\n                booleansPreferences: [false, false, false],\r\n                booleanAllergies: [false, false, false]\r\n            };\r\n            tempUsers.push(emptyDict);\r\n            localStorage.setItem('users', JSON.stringify(tempUsers));\r\n        }\r\n\r\n        localStorage.setItem('currentUser', this.state.name);\r\n\r\n    }\r\n    handleTest(e) {\r\n        if(localStorage.getItem(\"viewInit\") ==undefined){\r\n            localStorage.setItem(\"viewInit\", \"1\")\r\n        }\r\n\r\n        if (e.ctrlKey && e.charCode == 13 ) {\r\n            localStorage.setItem(\"viewInit\", ((JSON.parse( localStorage.getItem(\"viewInit\")))+1)%2);\r\n        }\r\n\r\n\r\n        else if( e.charCode==13){\r\n            let users = JSON.parse(localStorage.getItem(\"users\"));\r\n            let logForUser = users[0].Log;\r\n            let s = \"\";\r\n            let k = \"\";\r\n            for(let j = 0; j<users.length;j++){\r\n                logForUser = users[j].Log;\r\n                k = k+users[j].Name;\r\n                if(j!=users.length-1) {\r\n                    k = k+\", \";\r\n                }\r\n                for(let i = 0; i< logForUser.length; i++){\r\n                    s = s + logForUser[i];\r\n                    if(i!=logForUser.length -1) s =s +\", \"\r\n                }\r\n                if(j!=users.length-1) {\r\n                    s= s+\"; \";\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"logForUser\", s);\r\n            localStorage.setItem(\"usersString\", k);\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"DarkBackground\">\r\n                        <div>\r\n                            <h4 className=\"fadeInLeft0\">Hello there! Thank you for wanting to participate in our test.</h4>\r\n                            <h4 className=\"fadeInLeft1\"> Before we start, can we please get your name?</h4>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                className={\"textBox fadeInLeft2\"}\r\n                                placeholder={\"Your name\"}\r\n                                value={this.state.username}\r\n                                onChange={this.handleChange}\r\n                                onKeyPress={this.handleTest}\r\n                            />\r\n\r\n                        </div>\r\n                        <Link to=\"/home\"><button className=\"NextButton White fadeInLeft3\"\r\n                             onClick={\r\n                                ()=>{this.updateUsers()}\r\n                             }>\r\n                        <b>NEXT</b></button></Link>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nlet listOfTimeStamps = [];\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\n\r\n\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\n\r\nclass GettingToKnow extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(localStorage.getItem(\"listOfTimeStamps\") === null){\r\n            let newList = [[\"time stamp\", \"action\", \"view\", \"recipe\"]];\r\n            localStorage.setItem(\"listOfTimeStamps\", JSON.stringify(newList));\r\n        }\r\n\r\n        this.state = {\r\n            timesClicked: 0,\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n            view: 0,\r\n\r\n        };\r\n\r\n        this.socket=this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.increaseCounter=this.increaseCounter.bind(this);\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n\r\n        let payload={\r\n            action: \"initialise\"\r\n        };\r\n        this.socket.onopen = () => {\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                this.getRecommendations();\r\n            }\r\n\r\n            // do something after connection is opened\r\n        };\r\n\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                        // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n\r\n                    break;\r\n                case \"favorites\":\r\n                    if(this.loading){\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                    //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n                    localStorage.setItem(\"kkk\", JSON.stringify(translation))\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n        if(this.state.swipednumber==undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n\r\n        }\r\n        let answer=[]\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n\r\n        if(this.socket!=undefined){\r\n\r\n            return this.socket;\r\n        }\r\n        this.state.favorite=false;\r\n        return new WebSocket(\"ws://localhost:9000\");\r\n    }\r\n\r\n    increaseCounter() {\r\n\r\n        console.log(\"increased\");\r\n        let clicked = this.state.timesClicked + 1;\r\n        this.setState({timesClicked: clicked})\r\n    }\r\n    getInfo(string) {\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n\r\n    }\r\n    sendRecipe(name) {\r\n\r\n        console.log(\"send recipe\");\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n\r\n\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name) {\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(similarpayload));\r\n\r\n        }\r\n    }\r\n\r\n    getFavorites(){\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        let payload = {\r\n            action: \"Favorites\",\r\n\r\n\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n\r\n\r\n\r\n        const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\",\"low-cholesterol\",\"kosher\",\"ramadan\", \"low-protein\"];\r\n        const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n\r\n\r\n        console.log(payload);\r\n\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        /*\r\n        Swal.fire({\r\n            title: 'Results',\r\n            text: \"Waiting for results\",\r\n            icon: 'load',\r\n\r\n        });\r\n\r\n         */\r\n    }\r\n\r\n    getRecommendations(recommendation){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let tempUserIndex = -1;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n                tempUserIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n\r\n\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.loading=true;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n\r\n            }\r\n        }\r\n        if(similarMeals!==undefined){\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        nutritionalInfoHtml.push(\r\n            <div className=\"row\">\r\n                <div className=\"Nutritioncolumn\">\r\n                    <div className=\"popupTextTitle\">\r\n                        Nutritional info:\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"textrow\">\r\n                        <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                        <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"popupTextTitle2\">\r\n                        Because you liked:\r\n                        <br/>\r\n                    </div>\r\n                    {explanationHtmlTemp}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n    recipePopup(name,image){\r\n\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n\r\n                    {popUpHtml}\r\n                </div>\r\n\r\n            </Popup>);\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n\r\n                </img>\r\n                <Popup  open={this.state.open} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {popUpHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.open} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        const value = (this.state.view + 1) % 2;\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", value.toString());\r\n    }\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopen: true});}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopen} onClick={() => this.setState({nutritionopen: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopen: false})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({nutritionopen: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        this.setState({favorite: true});\r\n    }\r\n\r\n    generateView() {\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n\r\n                    <div>\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n                    Times clicked: {this.state.timesClicked}\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                        <button className=\"NextButton Green\" onClick={()=> alert('hi')}>Recommendations</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            if (this.state.view === 0) {\r\n                return (\r\n                    <div>\r\n\r\n                        <div>\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\"><b>Recommend</b></button></Link>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n            else {\r\n                if (this.state.swipednumber < 6) {\r\n                    return (\r\n                        <div className=\"Span\">\r\n                            <div style={wrapperStyles}>\r\n\r\n                                {this.state.foods.length > 0 ? (\r\n                                    <div style={wrapperStyles}>\r\n\r\n                                        <Swipeable\r\n                                            buttons={({left, right}) => (\r\n                                                <div style={actionsStyles}>\r\n                                                    <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                    <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                                </div>\r\n                                            )}\r\n                                            onAfterSwipe={this.remove}\r\n                                            onSwipe={this.swipeItem}\r\n                                        >\r\n\r\n                                            <div className=\"FoodCard fadeInLeft0\">\r\n                                                <div className=\"FoodHeader\">\r\n                                                    <b>{this.getname(this.state.swipednumber)}</b>\r\n                                                </div>\r\n                                                {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n\r\n                                                {this.generateBadges(this.state.swipednumber)}\r\n                                                <div>\r\n                                                    {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                    {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </Swipeable>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <div >\r\n                                        <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                        <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                        <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div >\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                            <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                            <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n        let html = [];\r\n\r\n\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n\r\n            let badges = [];\r\n            currentfavorite[\"tags\"].forEach(function (item, index) {\r\n\r\n                let badgeName = \"FoodBadge \" + item;\r\n                if (item === \"15-minutes-or-less\") {\r\n                    badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                }\r\n                badges.push(<button className={badgeName}> </button>);\r\n\r\n            });\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            html.push(<div>\r\n                <button className={className} onClick={() => this.getInfo(currentfavorite[\"name\"])}  >\r\n\r\n                    <img className=\"FoodPhoto\" align=\"left\" src={currentfavorite[\"image\"]} alt=\"Food\"/>\r\n\r\n                    <b className=\"FoodTitle\">{currentfavorite[\"name\"]}</b> <br/>\r\n                    {badges}\r\n\r\n                    {this.recipePopup(currentfavorite[\"name\"],currentfavorite[\"image\"])}\r\n                    {this.nutritionalPopup(currentfavorite[\"name\"])}\r\n                </button>\r\n            </div>)\r\n\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n                assets[food].forEach(function (item, i) {\r\n                    let badgeName = \"FoodBadge \" + item;\r\n                    if (item === \"15-minutes-or-less\") {\r\n                        badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                    }\r\n                    badges.push(<button className={badgeName}> </button>);\r\n\r\n                });\r\n            }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n\r\n\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>1){\r\n                if (assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<button className={badgeName}> </button>);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} } onClick={() => this.getInfo(foods[i])}  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => this.logAction(\"get recipe\",name)}>\r\n                                    {this.recipePopup(foods[i],this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => this.logAction(\"get nutritional values\",name)}>\r\n                                    {this.nutritionalPopup(foods[i])}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n\r\n    }\r\n\r\n    like(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n\r\n                let t=0;\r\n\r\n                for(let j=0;j<foods.length;j++){\r\n                    let f1 = foods[j].toLowerCase();\r\n\r\n                    if(f1===f2){\r\n                        t=j;\r\n                    }\r\n                }\r\n                if(liked==null){\r\n                    liked=[];\r\n                }\r\n                foods.splice(t,1);\r\n                this.state.foods=foods;\r\n                tags.splice(t,1);\r\n                this.state.tags=tags;\r\n                images.splice(t,1);\r\n                this.state.images=images;\r\n\r\n                liked.push(name);\r\n\r\n                this.state.likedItems = liked;\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    dislike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    let f1 = foods[j].toLowerCase();\r\n                    if (f1 === f2) {\r\n                        t = j;\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.state.foods = foods;\r\n                tags.splice(t, 1);\r\n                this.state.tags = tags;\r\n                images.splice(t, 1);\r\n                this.state.images = images;\r\n\r\n\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n\r\n                disliked.push(name);\r\n\r\n\r\n                this.state.dislikedItems = disliked;\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", name);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"view\")) === 1){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"swipe mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    endSwipe(){\r\n        this.state.swiping=false;\r\n        this.state.shadownr=0;\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n    swiped(eventData,name) {\r\n        this.state.swiping=true;\r\n        this.state.shadownr=eventData.deltaX;\r\n\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let transit=this.state.transparency;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n\r\n    }\r\n\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    //RENDER\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"PageHeader\"> <b className=\"PageTitle\">Let's get to know you!</b>\r\n                        <Link to=\"/profile\"><button className=\"profile\" ><b> </b></button></Link>\r\n                        <Link to=\"/recommendations\"><button onClick={() => {localStorage.setItem(\"favorite\", JSON.stringify(true));}} title=\"favorites\" className=\"favorites\" ><b> </b></button></Link>\r\n                        <Link to=\"/recommendations\"><button onClick={() => localStorage.setItem(\"favorite\", JSON.stringify(false))} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n                        <div className=\"sliderBox\" >\r\n                            <label className=\"switch\">\r\n                                <input type=\"checkbox\"></input>\r\n                                <span className=\"slider round\" onClick={this.switchViews}></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {this.generateView()}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GettingToKnow;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ReactSwing from \"react-swing\";\r\n\r\nclass SwipeTest extends Component {\r\n    stackEl = React.createRef();\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        // An instance of the Stack\r\n        this.state = {\r\n            stack: null,\r\n            foods: [\"Turkey\", \"Ham\", \"Pineapple\", \"Test\", 'Seeds']\r\n        };\r\n\r\n        this.createCards = this.createCards.bind(this);\r\n    }\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card clubs\" ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{this.state.foods[i]}</b></div>\r\n\r\n            </div>)\r\n        }\r\n        return html\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"viewport\">\r\n                    <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                    <div className=\"likeStack\"><b>Like</b></div>\r\n                    {/*ReactSwing Element*/}\r\n                    <ReactSwing\r\n                        className=\"stack\"\r\n                        tagName=\"div\"\r\n                        setStack={stack => this.setState({ stack })}\r\n                        ref={this.stackEl}\r\n                    >\r\n                        {/*children elements is will be Card*/}\r\n                        {this.createCards()}\r\n                    </ReactSwing>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwipeTest;","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal, {clickConfirm} from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nimport {  Popup as InfoPopup } from \"semantic-ui-react\";\r\nimport ReactSwing from \"react-swing\";\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\n\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nclass RecommendationsA extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        this.socket=this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.goToRecommends=this.goToRecommends.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        this.saveAlert = this.saveAlert.bind(this);\r\n        this.createCards = this.createCards.bind(this);\r\n\r\n\r\n        this.socket.onopen = () => {\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let payload= {\r\n                action: \"initialise\"\r\n            };\r\n            for (let i = users.length-1; i>=0; i--) {\r\n                if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                               users[i].FirstTime1 = false;\r\n                               localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n                    let liked=users[i].Liked;\r\n                    payload={\r\n                        action: \"initialise\",\r\n                        favorites:liked,\r\n                        name: localStorage.getItem('currentUser')\r\n                    };\r\n                }\r\n            }\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                if(this.state.favorite){\r\n                    this.goToFavorites()\r\n                }\r\n                else{\r\n                    this.getRecommendations();\r\n                }\r\n            }\r\n            // do something after connection is opened\r\n        };\r\n\r\n        this.state.favorite=JSON.parse(localStorage.getItem('favorite'));\r\n\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                        // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    Swal.fire({\r\n                        title: 'Great!',\r\n                        text: \"Now let's choose some meals you like or dislike, so we can get a small glimpse into your preferences.\",\r\n                        icon: 'success',\r\n                        confirmButtonText: 'Okay!'\r\n                    }).then(() => {\r\n                        if (clickConfirm) {\r\n                            Swal.fire({\r\n                                text: \" Drag an item left to dislike it, or right to like it.\",\r\n                                icon: 'info',\r\n                                confirmButtonText: 'Okay!'\r\n                            }).then(() => {\r\n                                if (clickConfirm) {\r\n                                    Swal.fire({\r\n                                        text: \" If you're ready, press the button down bellow for some personalized recommendations!\",\r\n                                        icon: 'info',\r\n                                        confirmButtonText: 'Okay!'\r\n                                    });\r\n                                }\r\n                            })\r\n                        }});\r\n\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n                    if(JSON.parse(localStorage.getItem('viewInit'))==1 && this.state.initialised!=true){\r\n                        this.state.view=0;\r\n                        sleep(5).then(() => {\r\n                            this.state.view= JSON.parse(localStorage.getItem('viewInit'));\r\n                            if(this.state.view==1){\r\n                                this.state.swipednumber=0;\r\n                                const value = (this.state.view + 1) % 2;\r\n                                localStorage.setItem(\"view\", value);\r\n                                this.state.initialised=true;\r\n                                this.setState({view: 1});\r\n                            }\r\n                        })\r\n\r\n\r\n                    }\r\n                    break;\r\n                case \"favorites\":\r\n\r\n                    if(this.loading){\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                    //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n\r\n                    // alert(\"this favorites\");\r\n                    this.loading=false;\r\n                    Swal.fire({\r\n                        title: \"Finished!\",\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n        if(this.state.swipednumber===undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n\r\n        if(this.state.favorite){\r\n            this.goToFavorites()\r\n        }\r\n        if(this.state.initialised==undefined||this.state.initialised==false){\r\n            this.state.view=0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n        }\r\n        let answer=[];\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n        if(this.socket!==undefined){\r\n            return this.socket;\r\n        }\r\n        this.setState({favorite: false});\r\n        return new WebSocket(\"ws://localhost:9000\");\r\n    }\r\n\r\n    getInfo(string) {\r\n\r\n\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n    }\r\n    sendRecipe(name) {\r\n        name=name.toLowerCase();\r\n        console.log(\"send recipe\");\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name) {\r\n        name=name.toLowerCase();\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            if(likedItems[i]!=name){\r\n                let item = {};\r\n                item['name'] = likedItems[i];\r\n                item['rating']= 1.0;\r\n                prolist.push(item);\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        this.state.proto=!this.state.proto;\r\n        if(this.sendable) {\r\n            if(this.state.proto){\r\n                this.socket.send(JSON.stringify(similarpayload));\r\n                Swal.fire({\r\n                    title: \"Loading...\",\r\n                    text: \"Please wait\",\r\n                    showConfirmButton: false,\r\n                    allowOutsideClick: false,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getFavorites(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        let payload = {\r\n            action: \"Favorites\",\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n\r\n        const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\",\"low-cholesterol\",\"kosher\",\"ramadan\", \"low-protein\"];\r\n        const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n\r\n        console.log(payload);\r\n\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    getRecommendations(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempUserIndex = -1;\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempUserIndex = i;\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n        for (let k = 0; k<names.length; k++){\r\n            names[k] = names[k].toLowerCase();\r\n        }\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        console.log(payload)\r\n        if(this.sendable) {\r\n\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.state.initialised=false;\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n        if(nutritionalInfo!==undefined){\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopup(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>);\r\n        return html;\r\n    }\r\n\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({opened: name});this.logAction(\"get recipe\",name)}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.opened==name} onClick={() => this.setState({opened: \"none\"})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => {this.setState({opened: \"none\"});this.logAction(\"get recipe\",name) }}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({opened: \"none\"})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined) {\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n                </img>\r\n                <Popup  open={false} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopened: name});this.logAction(\"get nutritional values\",name)}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopened==name} onClick={() => this.setState({nutritionopened: 'none'})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopened: \"none\"})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => {this.setState({nutritionopened: \"none\"});this.logAction(\"get nutritional values\",name)}}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n    saveAlert() {\r\n        Swal.fire({\r\n            title: 'Saved!',\r\n            text: \"Your liked and disliked meals are saved.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Great!'\r\n        });\r\n        this.getRecommendations();\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", 1);\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        let  value = (this.state.view + 1) % 2;\r\n        localStorage.setItem(\"viewInit\", value);\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n\r\n        localStorage.setItem(\"view\", value);\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(true));\r\n        this.setState({favorite: true});\r\n\r\n    }\r\n    goToRecommends(){\r\n        this.getRecommendations();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n        this.setState({favorite: false});\r\n\r\n    }\r\n\r\n    /*\r\n        generateView() {\r\n            if(this.state.favorite){\r\n                return(\r\n                    <div>\r\n                        <div className=\"Listing\">\r\n                            favoritestate\r\n                            {this.generateFavorites()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else{\r\n                if (this.state.view === 0) {\r\n                    return (\r\n                        <div>\r\n\r\n                            <div className=\"Listing\">\r\n                                {this.generateMeal()}\r\n                            </div>\r\n                            Times clicked: {this.state.timesClicked}\r\n                            <div className=\"buttons\">\r\n                                <button className=\"NextButton Green\" onClick={this.saveAlert}><b>SAVE</b></button>\r\n                            </div>\r\n                        </div>)\r\n                }\r\n                else {\r\n                    if (this.state.swipednumber < 6) {\r\n                        return (\r\n                            <div className=\"Span\">\r\n                            <div style={wrapperStyles}>\r\n\r\n                                {this.state.foods.length > 0 ? (\r\n                                    <div style={wrapperStyles}>\r\n\r\n                                        <Swipeable\r\n                                            buttons={({left, right}) => (\r\n                                                <div style={actionsStyles}>\r\n                                                    <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                    <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                                </div>\r\n                                            )}\r\n                                            onAfterSwipe={this.remove}\r\n                                            onSwipe={this.swipeItem}\r\n                                        >\r\n\r\n                                            <div className=\"FoodCard fadeInLeft0\">\r\n                                                <div className=\"FoodHeader\">\r\n                                                    <b>{capitalizeFLetter(this.getname(this.state.swipednumber))}</b>\r\n                                                </div>\r\n                                                <div className=\"table\">\r\n\r\n                                                        <div className=\"tablerow1\">\r\n                                                            {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n                                                        </div>\r\n                                                        <div className=\"tablerow2\">\r\n                                                            {this.generateBadges(this.state.swipednumber)}\r\n                                                        </div>\r\n                                                        <div className=\"tablerow3\">\r\n                                                            {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                            {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                        </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </Swipeable>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <div >\r\n                                        <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                        <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                        <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    else{\r\n                        return(\r\n                            <div >\r\n                                <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n\r\n            }\r\n        } */\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card\"  ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{capitalizeFLetter(this.state.foods[i])}</b></div>\r\n                {this.recipePopupFromImage(this.getname(i),this.getimage(i))}\r\n                {this.generateBadges(i)}\r\n                <div className=\"tablerow3\">\r\n                    {this.recipePopupForTinder(this.state.foods[i],this.getimage(i))}\r\n                    {this.nutritionalPopupForTinder(this.state.foods[i])}\r\n                </div>\r\n            </div>)\r\n\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateView() {\r\n\r\n\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.view === 0) {\r\n\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\"><b>Recommend!</b></button></Link>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n\r\n\r\n            else {\r\n\r\n                return (\r\n                    <div>\r\n                        <div id=\"viewport\">\r\n                            <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                            <div className=\"likeStack\"><b>Like</b></div>\r\n                            <ReactSwing\r\n                                className=\"stack\"\r\n                                tagName=\"div\"\r\n                                setStack={stack => this.setState({ stack })}\r\n                                ref={this.stackEl}\r\n                                throwoutleft={()=>this.dislike(\"\")}\r\n                                throwoutright={()=>this.like(\"\")}\r\n                            >\r\n                                {this.createCards()}\r\n                            </ReactSwing>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\" ><b>Recommend!</b></button></Link>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n        // alert(JSON.stringify(favorites));\r\n        let html = [];\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n            let name =currentfavorite[\"name\"];\r\n            let image=currentfavorite[\"image\"];\r\n            let badges = [];\r\n\r\n            if(currentfavorite[\"tags\"]==undefined){\r\n\r\n            }\r\n            else{\r\n                if(currentfavorite[\"tags\"].length<=1){\r\n                    badges.push(<button className={\"FoodBadge \"+currentfavorite[\"tags\"]}> </button> )\r\n                }\r\n                else{\r\n                    currentfavorite[\"tags\"].forEach(function (item, index) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<button className={badgeName}> </button>);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedLeft:()=>this.unlike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined) {\r\n                if (this.state.showThumbs == name || this.state.translation[name] != undefined) {\r\n                    if (Math.abs(this.state.shadownr) > 10) {\r\n                        if (this.state.shadownr > 0) {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimagewithshadow2\"/>\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimage2\"/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"dislikedimage2\"/>\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} }  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={image} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(name,this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}}>\r\n                                    {this.nutritionalPopup(name)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>);\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n                assets[food].forEach(function (item, i) {\r\n                    let badgeName = \"FoodBadge \" + item;\r\n                    if (item === \"15-minutes-or-less\") {\r\n                        badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                    }\r\n                    badges.push(<InfoPopup  position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n\r\n                });\r\n            }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>0){\r\n                if(assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<InfoPopup position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n                    });\r\n                }\r\n\r\n            }\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} } onClick={() => {}}  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(foods[i],this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}} >\r\n                                    {this.nutritionalPopup(foods[i])}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    like(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t=0;\r\n                for(let j=0;j<foods.length;j++){\r\n                    if(foods[j]!=undefined){\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if(f1===f2){\r\n                            t=j;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // alert(liked.length);\r\n                if( liked.length==undefined){\r\n                    let newliked=[];\r\n                    if(liked!=undefined){\r\n                        newliked.push(liked);\r\n                    }\r\n\r\n                    newliked.push(f2);\r\n                    liked=newliked;\r\n                }\r\n                else{\r\n\r\n                    liked.push(f2);\r\n                }\r\n\r\n                foods.splice(t,1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t,1);\r\n                this.setState({tags: tags});\r\n                images.splice(t,1);\r\n                this.setState({images: images});\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n                // alert(users[i].Liked);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unlike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n\r\n                let t = 0;\r\n                for (let j = 0; j < liked.length; j++) {\r\n                    if(liked[j]!=undefined) {\r\n                        let f1 = liked[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                if (liked==undefined){\r\n                    liked=[];\r\n                }\r\n\r\n                liked.splice(t, 1);\r\n                let favorites=this.state.favorites;\r\n                favorites.splice(t,1);\r\n                this.setState({liked: liked});\r\n                this.setState({favorites: favorites});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.setState({likedItems: liked});\r\n                this.logAction(\"unlike\", name);\r\n\r\n                break;\r\n            }\r\n            this.setState({favorite:true});\r\n        }\r\n\r\n    }\r\n    dislike(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    if(foods[j]!=undefined) {\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t, 1);\r\n                this.setState({tags: tags});\r\n                images.splice(t, 1);\r\n                this.setState({images: images});\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n                disliked.push(name);\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", name);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"viewInit\")) === 0){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"tinder mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    endSwipe(){\r\n        this.setState({swiping: false});\r\n        this.setState({shadownr: 0});\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n\r\n    swiped(eventData,name) {\r\n        this.setState({swiping: true});\r\n        this.setState({shadownr: eventData.deltaX});\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n    }\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n\r\n    //RENDER\r\n    render() {\r\n\r\n        if(this.state.favorite){\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Favorites</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n        // Favorites view\r\n        else{\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Let's get to know you!</b>\r\n\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        //<Link to=\"/recommendations\"><button onclick={() => localStorage.setItem(\"favorite\", JSON.stringify(true)} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n    }\r\n}\r\n\r\nexport default RecommendationsA\r\n","import React from 'react';\r\nimport './Profile.css';\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked: props.checked,\r\n            name: props.name,\r\n            id: props.id,\r\n            prefs : props.prefs\r\n        };\r\n    }\r\n    toggleChange = () => {\r\n        this.setState({\r\n            isChecked: !this.state.isChecked,\r\n        });\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let prefs = users[i].booleansPreferences;\r\n                let all = users[i].booleanAllergies;\r\n                if (this.state.prefs === true) {\r\n\r\n                        prefs[this.state.id] = !prefs[this.state.id];\r\n                        users[i].booleansPreferences = prefs;\r\n\r\n                }\r\n                else {\r\n                        all[-this.state.id -1] = !all[-this.state.id -1];\r\n                        users[i].booleanAllergies = all;\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        localStorage.setItem(\"users\", JSON.stringify(users))\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <input type=\"checkbox\"\r\n                       checked={this.state.isChecked}\r\n                       onChange={this.toggleChange}\r\n                       id={this.state.id}\r\n                />\r\n            <label for={this.state.id}>\r\n                {this.state.name}\r\n            </label>\r\n            </li>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport './Profile.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Checkbox from \"./checkBox\";\r\nimport Swal, {clickCancel, clickConfirm} from 'sweetalert2';\r\n\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        let alreadySet = false;\r\n        this.amountOfLikes = 0;\r\n        this.amountOfDislikes = 0;\r\n        if(localStorage.getItem('users') != null){\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            for(let i = 0; i<users.length; i++){\r\n                if(users[i].Name === localStorage.getItem('currentUser')){\r\n                    if(users[i].Preferences && users[i].Preferences.length && users[i].Allergies&& users[i].Preferences){\r\n                        alreadySet = true;\r\n                        this.amountOfDislikes = users[i].Allergies.length;\r\n                        this.amountOfLikes = users[i].Preferences.length;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(!alreadySet){\r\n            let list = [];\r\n        }\r\n        this.items = ['60-minutes-or-less', 'time-to-make', 'course', 'main-ingredient', 'cuisine', 'preparation', 'occasion', 'north-american', 'side-dishes', 'vegetables', 'mexican', 'easy', 'fall', 'holiday-event', 'vegetarian', 'winter', 'dietary', 'christmas', 'seasonal', 'squash', '30-minutes-or-less', 'breakfast', 'main-dish', 'pork', 'american', 'oven', 'kid-friendly', 'pizza', 'northeastern-united-states', 'meat', 'equipment', 'chili', 'crock-pot-slow-cooker', '4-hours-or-less', 'eggs-dairy', 'potatoes', 'dinner-party', 'easter', 'cheese', 'stove-top', 'new-years', 'thanksgiving', 'independence-day', 'st-patricks-day', 'valentines-day', 'inexpensive', 'brunch', 'superbowl', 'presentation', 'served-hot', 'weeknight', 'canning', 'condiments-etc', 'heirloom-historical', 'amish-mennonite', 'number-of-servings', 'technique', '15-minutes-or-less', 'low-protein', '5-ingredients-or-less', 'beverages', 'fruit', 'low-sodium', 'shakes', 'low-calorie', 'low-in-something', 'apples', 'served-cold', '3-steps-or-less', 'appetizers', 'canadian', 'vegan', 'freezer', 'south-west-pacific', 'hawaiian', 'spicy', 'copycat', 'pork-ribs', 'super-bowl', 'novelty', 'taste-mood', 'savory', 'sweet', 'pies-and-tarts', 'desserts', 'lunch', 'snacks', 'no-cook', 'refrigerator', 'frozen-desserts', 'pies', 'chocolate', 'breads', 'oamc-freezer-make-ahead', 'quick-breads', 'tropical-fruit', 'bananas', 'healthy', '1-day-or-more', 'comfort-food', 'berries', 'strawberries', 'beans', 'potluck', 'to-go', 'greens', 'collard-greens', 'pork-chops', 'southwestern-united-states', 'deep-fry', 'candy', 'beef', 'one-dish-meal', 'lactose', 'bisques-cream-soups', 'soups-stews', 'spring', 'food-processor-blender', 'free-of-something', 'cauliflower', 'small-appliance', 'beginner-cook', 'low-cholesterol', 'low-carb', 'healthy-2', 'spinach', 'low-saturated-fat', 'high-calcium', 'high-in-something', 'very-low-carbs', 'sauces', 'eggs', 'savory-sauces', 'asian', 'indian', 'herb-and-spice-mixes', 'cooking-mixes', 'peppers', 'poultry', 'chicken', 'gluten-free', 'californian', 'black-beans', 'grilling', 'picnic', 'cookies-and-brownies', 'bar-cookies', 'brownies', 'gifts', 'casseroles', 'ground-beef', 'wild-game', 'deer', 'low-fat', 'summer', 'toddler-friendly', 'mixer', 'clear-soups', 'salads', 'pasta', 'pasta-rice-and-grains', 'for-large-groups', 'muffins', 'sandwiches', 'cakes', 'nuts', 'pineapple', 'corn', 'german', 'european', 'yeast', 'italian', 'lasagna', 'omelets-and-frittatas', 'for-1-or-2', 'romantic', 'ramadan', 'chicken-breasts', 'diabetic', 'dips', 'barbecue', 'marinades-and-rubs', 'finger-food', 'infant-baby-friendly', 'roast', 'veal', 'garnishes', 'cheesecake', 'grains', 'wedding', 'kosher', 'high-protein', 'mushrooms', 'seafood', 'fish', 'tuna', 'saltwater-fish', 'elbow-macaroni', 'pancakes-and-waffles', 'midwestern', 'southern-united-states', 'chicken-thighs-legs', 'salmon', 'indonesian', 'soy-tofu', 'tempeh', 'spreads', 'beef-ribs', 'grapes', 'smoothies', 'bacon', 'broil', 'pacific-northwest', 'tomatoes', 'cocktails', 'no-shell-fish', 'squid', 'polish', 'chinese', 'steam', 'onions', 'british-columbian', 'broccoli', 'kwanzaa', 'meatloaf', 'simply-potatoes2', 'rolled-cookies', 'drop-cookies', 'cake-fillings-and-frostings', 'lettuces', 'stews', 'lentils', 'danish', 'scandinavian', 'swiss', 'swedish', 'french', 'from-scratch', 'microwave', 'granola-and-porridge', 'bread-machine', 'asparagus', 'gumbo', 'african', 'cajun', 'shrimp', 'creole', 'shellfish', 'savory-pies', 'salad-dressings', 'orange-roughy', 'leftovers', 'simply-potatoes', 'crab', 'mango', 'curries', 'egg-free', 'roast-beef', 'pork-sausage', 'brown-bag', 'turkey', 'whole-turkey', 'green-yellow-beans', 'beef-sausage', 'australian', 'rice', 'brown-rice', 'white-rice', 'long-grain-rice', 'caribbean', 'central-american', 'stuffings-dressings', 'english', 'spaghetti', 'coconut', 'quebec', 'freshwater-fish', 'catfish', 'middle-eastern', 'lebanese', 'ravioli-tortellini', 'steak', 'clams', 'rolls-biscuits', 'gelatin', 'greek', 'citrus', 'oranges', 'papaya', 'punch', 'pitted-fruit', 'peaches', 'moose', 'wings', 'pasta-shells', 'blueberries', 'fudge', 'celebrity', 'south-american', 'sweet-sauces', 'russian', 'pork-loins', 'ham', 'burgers', 'biscotti', 'peanut-butter', 'baja', 'halloween', 'dairy-free', 'high-fiber', 'zucchini', 'puddings-and-mousses', 'japanese', 'lemon', 'chick-peas-garbanzos', 'cobblers-and-crisps', 'lamb-sheep', 'flat-shapes', 'turkey-burgers', 'carrots', 'penne', 'micro-melanesia', 'yams-sweet-potatoes', 'cinco-de-mayo', 'native-american', 'artichoke', 'salsas', 'cupcakes', 'puerto-rican', 'stir-fry', 'hand-formed-cookies', 'spanish', 'steaks', 'irish', 'scones', 'oaxacan', 'lime', 'camping', 'thai', 'polynesian', 'melons', 'jewish-ashkenazi', 'hanukkah', 'rosh-hashana', 'iraqi', 'saudi-arabian', 'whole-chicken', 'sourdough', 'baking', 'medium-grain-rice', 'pakistani', 'scottish', 'chutneys', 'somalian', 'non-alcoholic', 'mardi-gras-carnival', 'ontario', 'raspberries', 'crusts-pastry-dough-2', 'coffee-cakes', 'memorial-day', 'tex-mex', 'south-african', 'passover', 'new-zealand', '', 'chowders', 'pressure-cooker', 'whitefish', 'halibut', 'bok-choys', 'pennsylvania-dutch', 'ice-cream', 'pears', 'scallops', 'pheasant', 'water-bath', 'stocks', 'tarts', 'chinese-new-year', 'chicken-livers', 'manicotti', 'szechuan', 'birthday', 'nut-free', 'fillings-and-frostings-chocolate', 'jams-and-preserves', 'unprocessed-freezer', 'cherries', 'chard', 'tilapia', 'colombian', 'welsh', 'short-grain-rice', 'kiwifruit', 'breakfast-eggs', 'eggs-breakfast', 'czech', 'filipino', 'turkey-breasts', 'cuban', 'perch', 'smoker', 'college', 'belgian', 'costa-rican', 'guatemalan', 'honduran', 'finnish', 'moroccan', 'a1-sauce', 'avocado', 'jellies', 'labor-day', 'iranian-persian', 'jewish-sephardi', 'dutch', 'pumpkin', 'cod', 'sole-and-flounder', 'plums', 'turkish', 'portuguese', 'soul', 'hungarian', 'georgian', 'brazilian', 'nigerian', 'ethiopian', 'fathers-day', 'sudanese', 'congolese', 'ecuadorean', 'mussels', 'peruvian', 'meatballs', 'egyptian', 'argentine', 'mahi-mahi', 'chilean', 'hidden-valley-ranch', 'dehydrator', 'crawfish', 'oatmeal', 'reynolds-wrap', 'malaysian', 'duck', 'rosh-hashanah', 'nepalese', 'eggplant', 'goose', 'icelandic', 'veggie-burgers', 'mothers-day', 'mashed-potatoes', 'chocolate-chip-cookies', 'vietnamese', 'elk', 'oysters', 'palestinian', 'rabbit', 'norwegian', 'lobster', 'main-dish-beef', 'beef-crock-pot', 'pot-roast', 'hunan', 'austrian', 'halloween-cocktails', 'libyan', 'april-fools-day', 'beef-organ-meats', 'beef-liver', 'angolan', 'korean', 'cantonese', 'whole-duck', 'halloween-cupcakes', 'halloween-cakes', 'ragu-recipe-contest', 'macaroni-and-cheese', 'trout', 'irish-st-patricks-day', 'bass', 'beijing', 'quail', 'pickeral', 'main-dish-chicken', 'bear', 'brewing', 'cambodian', 'beef-kidney', 'beef-sauces', 'spaghetti-sauce', 'heirloom-historical-recipes', 'pot-pie', 'dips-lunch-snacks', 'pressure-canning', 'main-dish-pork', 'pork-loins-roast', 'quiche', 'sugar-cookies', 'venezuelan', 'octopus', 'side-dishes-beans', 'beans-side-dishes', 'baked-beans', 'snacks-kid-friendly', 'snacks-sweet', 'duck-breasts', 'main-dish-pasta', 'pasta-salad', 'pasta-elbow-macaroni', 'namibian', 'mushroom-soup', 'beef-barley-soup', 'pork-crock-pot', 'crock-pot-main-dish', 'desserts-fruit', 'desserts-easy', 'lasagne', 'laotian', 'cabbage', 'prepared-potatoes', 'middle-eastern-main-dish', 'high-in-something-diabetic-friendly', 'dips-summer', 'black-bean-soup', 'bean-soup', 'served-hot-new-years', 'ham-and-bean-soup', 'lamb-sheep-main-dish', 'mongolian', 'for-large-groups-holiday-event', 'stews-poultry', 'pasta-rice-and-grains-elbow-macaroni', 'pork-loin', 'cranberry-sauce', 'marinara-sauce', 'breakfast-casseroles', 'breakfast-potatoes', 'main-dish-seafood', 'shrimp-main-dish', 'pumpkin-bread', 'bread-pudding', 'less_thansql:name_topics_of_recipegreater_than', 'chicken-crock-pot', 'chicken-stews', 'chicken-stew', 'Throw the ultimate fiesta with this sopaipillas recipe from Food.com.', 'roast-beef-main-dish', 'roast-beef-comfort-food'];\r\n\r\n        this.state = {\r\n            boxes: this.getItemLocal(\"boxes\"),\r\n            suggestionsLiked: [],\r\n            suggestionsDisliked: [],\r\n            textLiked: '',\r\n            textDisliked: ''\r\n        };\r\n\r\n        this.success = this.success.bind(this);\r\n        this.updateAccount = this.updateAccount.bind(this);\r\n\r\n    }\r\n\r\n\r\n    getItemLocal(name) {\r\n        return (JSON.parse(localStorage.getItem(name)))\r\n    }\r\n\r\n    getRender() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempIndex = -1;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempIndex = i;\r\n                localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n                if (users[i].FirstTime){\r\n\r\n                    Swal.fire({\r\n                        title: 'Welcome!',\r\n                        text: \"Let's set you up! First, choose your preferences and things you dislike, like allergies for example.\",\r\n                        icon: 'info',\r\n                        confirmButtonText: 'Okay!'\r\n                    });\r\n\r\n                    users[i].FirstTime = false;\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let returnVal = [];\r\n        let returnList = [];\r\n        returnVal.push( <h3> Things you like </h3>);\r\n        const {textLiked} = this.state;\r\n        const {textDisliked} = this.state;\r\n\r\n        for (let i = 0; i < this.amountOfLikes; i++) {\r\n            returnList.push(<Checkbox name={users[tempIndex].Preferences[i]} checked={users[tempIndex].booleansPreferences[i]} id={i} prefs={true}/>)\r\n        }\r\n\r\n\r\n        returnVal.push(<div class={\"container\"}><ul class={\"ks-cboxtags\"}> {returnList} </ul></div>);\r\n        returnVal.push( <input className=\"textBoxAdd\" value={textLiked}  onChange={this.onTextChangedLiked}  type={'text'}/>);\r\n        returnVal.push(this.renderSuggestionsLiked());\r\n        returnVal.push(<input className=\"addButton\" type={\"submit\"} value={\"Add something you like\"} onClick={() =>this.doChange(textLiked, 1)}/>);\r\n        returnVal.push(<h3> Things you dislike </h3>);\r\n        returnList = [];\r\n        for (let i = 0; i <  this.amountOfDislikes; i++) {\r\n            returnList.push(<Checkbox name={users[tempIndex].Allergies[i]} checked={users[tempIndex].booleanAllergies[i]} id={-i-1} prefs={false}/>)\r\n        }\r\n\r\n        returnVal.push(<div class={\"container\"}><ul class={\"ks-cboxtags\"}> {returnList} </ul></div>);\r\n        returnVal.push( <input className=\"textBoxAdd\" value={textDisliked}  onChange={this.onTextChangedDisliked}  type={'text'}/>);\r\n        returnVal.push(this.renderSuggestionsDisliked());\r\n        returnVal.push(<input className=\"addButton\" type={\"submit\"} value={\"Add something you dislike\"} onClick={() =>this.doChange(textDisliked, 2)}/>);\r\n        return returnVal\r\n\r\n    }\r\n\r\n    success() {\r\n\r\n\r\n    }\r\n    updateAccount(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                //let prefAndAllergies = JSON.parse(localStorage.getItem('boxes'));\r\n                //users[i].booleanAllergies = prefAndAllergies.slice(0, this.amountOfLikes);\r\n                //users[i].booleansPreferences = prefAndAllergies.slice(this.amountOfLikes+1, this.amountOfLikes+this.amountOfDislikes);\r\n                break;\r\n\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        this.success();\r\n    }\r\n\r\n    renderButton() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                if (users[i].FirstTime1){\r\n\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n                   return <Link to=\"/recommendationsA\"><button className=\"NextButton Green\" onClick={this.updateAccount}><b>Recommend!</b></button></Link>\r\n\r\n                }\r\n                else\r\n                    return <Link to=\"/recommendations\"><button className=\"NextButton Green\" onClick={this.updateAccount}><b>Recommend!</b></button></Link>\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onTextChangedLiked = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        if(value.length > 0){\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v));\r\n        }\r\n        this.setState(() => ({suggestionsLiked: suggestions, textLiked: value}));\r\n    }\r\n    onTextChangedDisliked = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        if(value.length > 0){\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v));\r\n        }\r\n\r\n        this.setState(() => ({suggestionsDisliked: suggestions, textDisliked: value}));\r\n    }\r\n    suggestionSelectedLiked(value){\r\n\r\n        this.setState(()=>({\r\n            textLiked: value,\r\n            suggestionsLiked: []\r\n        }))\r\n        this.state.textLiked = value;\r\n    }\r\n    suggestionSelectedDisliked(value){\r\n        this.setState(()=>({\r\n            textDisliked: value,\r\n            suggestionsDisliked: []\r\n        }))\r\n        this.state.textDisliked = value;\r\n    }\r\n    renderSuggestionsLiked(){\r\n\r\n        const {suggestionsLiked} = this.state;\r\n\r\n        if(suggestionsLiked.length === 0 ){\r\n            return null;\r\n        }\r\n        return(\r\n            <div className={\"AutoCompleteText\"}>\r\n            <ul>\r\n                {suggestionsLiked.map((i) => <li onClick={() =>this.suggestionSelectedLiked(i)}>{i}</li>)}\r\n            </ul>\r\n            </div>\r\n        );\r\n    }\r\n    renderSuggestionsDisliked(){\r\n\r\n        const {suggestionsDisliked} = this.state;\r\n\r\n        if(suggestionsDisliked.length === 0 ){\r\n            return null;\r\n        }\r\n        return(\r\n            <div className={\"AutoCompleteText\"}>\r\n                <ul>\r\n                    {suggestionsDisliked.map((i) => <li onClick={() =>this.suggestionSelectedDisliked(i)}>{i}</li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    doChange(item, buttonNb){\r\n        let items = this.items;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                if(items.includes(item) && item!==''){\r\n                    if(buttonNb === 1){\r\n                        users[i].Preferences.push(item);\r\n                        users[i].booleansPreferences.push(true);\r\n                        this.amountOfLikes = this.amountOfLikes + 1;\r\n                        this.setState(() => ({textLiked: item}));\r\n\r\n                    }\r\n                    else if(buttonNb === 2){\r\n                        users[i].Allergies.push(item);\r\n                        users[i].booleanAllergies.push(true);\r\n                        this.amountOfDislikes = this.amountOfDislikes + 1;\r\n                        this.setState(() => ({textDisliked: item}));\r\n\r\n                    }\r\n                    items.splice(this.items.indexOf(item),1);\r\n                    this.items = items\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <div className=\"PageHeader\"> <b className=\"PageTitle\">Your profile</b>\r\n                    <Link to=\"/profile\"><button className=\"profile\" ><b> </b></button></Link>\r\n                    <Link to=\"/recommendations\"><button onClick={() => {localStorage.setItem(\"favorite\", JSON.stringify(true));}} title=\"favorites\" className=\"favorites\" ><b> </b></button></Link>\r\n                    <Link to=\"/recommendations\"><button onClick={() => localStorage.setItem(\"favorite\", JSON.stringify(false))} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n                </div>\r\n                <header className=\"App-header\">\r\n                    {this.getRender()}\r\n                    {this.renderButton()}\r\n\r\n\r\n                </header>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n// eslint-disable-next-line\r\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/home';\r\nimport Recommendations from './pages/recommendations';\r\nimport TinderCards from './pages/tinderCards';\r\nimport UserSelection from './pages/userSelection';\r\nimport GettingToKnow from './pages/gettingToKnow';\r\nimport SwipeTest from './pages/SwipeTest';\r\nimport RecommendationsA from \"./pages/recommendationsA\";\r\n\r\nimport './App.css';\r\nimport Profile from \"./pages/profile\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n\r\n    sendmessage(message){\r\n        let socket = new WebSocket(\"ws://localhost:9000\");\r\n        //get an amount of recommends\r\n        // account is acount factors\r\n        //amount is the number of things to recommend\r\n        //prolist is the list of previously liked recipes each as a string of the name\r\n        let payload = {\r\n                action: \"Recommend\",\r\n                account: {vegan: 1, easy: 1, preparation: 1},\r\n                amount: 3,\r\n                prolist: [{name:\"hot tamale  burgers\", rating:0.5},{name:\"hot tamale  burgers\", rating:0.5}]\r\n            }\r\n        ;\r\n\r\n        //example output\r\n        let recipeoutput= {\r\n           // recommends1=[{name:\"hot tamale  burgers\"}];\r\n\r\n        }\r\n\r\n        //get similar elements\r\n        //recipe is the name ofe recipe to get similar to\r\n        //prolist is the list of previously liked recipes each as a string of the name\r\n        let Similar={\r\n            action: \"Similar\",\r\n            recipe: \"hot tamale  burgers\",\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        }\r\n        //get the recipe of an element\r\n        //recipe is the name of the recipe to get the similar element to\r\n        let Recipe={\r\n            action: \"Recipe\",\r\n            recipe: \"little kick  jalapeno burgers\"\r\n\r\n        }\r\n        this.socket.send(message);\r\n    }\r\n\r\n    startwebsocket(){\r\n        this.socket=new WebSocket(\"ws://localhost:9000\");\r\n\r\n        let payload={\r\n            action: \"initialise\"\r\n        }\r\n        this.socket.onopen = () => {\r\n            this.socket.send(JSON.stringify(payload));\r\n            // do something after connection is opened\r\n        }\r\n        this.socket.onmessage = (message) => {\r\n            this.initialised=true;\r\n\r\n            // handle message from backend\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.initialised=false;\r\n        this.startwebsocket();\r\n        /*\r\n        while(!this.initialised){\r\n            //await sleep(500);\r\n        }\r\n        */\r\n\r\n\r\n\r\n        return (\r\n            <Router basename=\"/react-auth-ui/\">\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route exact path=\"/test\" component={SwipeTest}></Route>\r\n                        <Route exact path=\"/\" component={UserSelection}></Route>\r\n                        <Route exact path=\"/recommendations\" component={Recommendations}></Route>\r\n                        <Route exact path=\"/profile\" component={Profile}></Route>\r\n                        <Route exact path=\"/tinderCards\" component={TinderCards}></Route>\r\n                        <Route exact path=\"/home\" component={Home}></Route>\r\n                        <Route exact path=\"/gettingToKnow\" component={Recommendations}></Route>\r\n                        <Route exact path=\"/recommendationsA\" component={RecommendationsA}></Route>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    static socketchange(f) {\r\n        this.socket.onopen=f;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
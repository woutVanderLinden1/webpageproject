{"version":3,"sources":["pages/home.js","pages/recommendations.js","pages/tinderCards.js","pages/userSelection.js","pages/gettingToKnow.js","pages/SwipeTest.js","pages/recommendationsA.js","pages/checkBox.js","pages/profile.js","App.js","serviceWorker.js","index.js"],"names":["Home","className","to","React","Component","styled","div","props","sliding","dir","capitalizeFLetter","string","returnVal","toUpperCase","slice","e","perc2color","perc","r","g","Math","round","b","toString","Recommendations","state","foods","tags","images","recipe","nutrition","ingredients","similar","initialiseSocket","sendable","generateMeal","bind","getRecommendations","switchViews","generateView","resetSwipes","generateFavorites","goToFavorites","goToRecommends","generateBadges","swipeItem","saveAlert","createCards","favorite","JSON","parse","localStorage","getItem","undefined","swipednumber","initialised","view","message","milliseconds","translation","data","console","log","action","this","loading","Swal","fire","title","showConfirmButton","timer","users","i","length","Name","FirstTime1","text","icon","confirmButtonText","then","clickConfirm","FirstTime2","setItem","stringify","initialfoods","recommends","initialtags","initialimages","shuffled","filterfoods","filteredfoods","filteredTags","filteredImages","setState","Promise","resolve","setTimeout","value","FirstTime3","favorites","array","array2","array3","temporaryValue","randomIndex","currentIndex","floor","random","answer","push","shuffle","newinitialfoods","newinitialtags","newinitialimages","likedItems","dislikedItems","Liked","Disliked","filteredFoods","filteredtags","filteredimages","p","includes","socket","noserver","sendRecipe","sendNuttritionSimilar","name","toLowerCase","payload","ingredipayload","send","fakemessage","similarpayload","prolist","item","proto","allowOutsideClick","rating","tempUserIndex","size","Length","DisLiked","account","vegan","easy","preparation","amount","names","Preferences","likes","booleansPreferences","k","nutritionLabels","nutritionalInfo","getNutritionInfo","nutritionalInfoHtml","nutritionalInfoHtmlTemp","nutritionalInfoHtmlTemp2","explanationHtmlTemp","similarMeals","getExplanation","empty","number","color","onClick","align","src","alt","style","backgroundColor","modal","trigger","image","recept","getRecipe","recipeHtmlTemp","getIngredients","popUpHtml","ingredientsHtmlTemp","html","position","open","opened","logAction","closeOnDocumentClick","nutritionopened","gerecht","thisCard","dislike","like","getFavorites","refName","ref","recipePopupFromImage","getname","getimage","recipePopupForTinder","nutritionalPopupForTinder","id","tagName","setStack","stack","stackEl","throwoutleft","throwoutright","currentfavorite","badges","forEach","index","badgeName","config","onSwiped","endSwipe","onSwipedLeft","unlike","display","preventDefaultTouchmoveEvent","trackMouse","transition","delta","swipingspecials","showThumbs","abs","shadownr","onSwiping","eventData","swiped","onMouseEnter","onMouseLeave","transform","transformfunc","opacity","transparfunc","recipePopup","nutritionalPopup","food","assets","getAssets","content","onSwipedRight","transparency","f2","liked","t","j","newliked","splice","disliked","thisAction","thisItem","Date","now","v","Log","swiping","deltaX","item2","tutor","wrapperStyles","width","height","actionsStyles","justifyContent","marginTop","TinderCards","remove","cards","indexOf","buttons","left","right","onAfterSwipe","onSwipe","zIndex","UserProfile","handleChange","event","target","tempUsers","alreadyInUsers","emptyDict","Allergies","FirstTime","booleanAllergies","ctrlKey","charCode","logForUser","s","type","placeholder","username","onChange","onKeyPress","handleTest","updateUsers","SwipeTest","context","createRef","sleep","RecommendationsA","onopen","onmessage","WebSocket","Checkbox","toggleChange","isChecked","prefs","all","checked","for","Profile","onTextChangedLiked","suggestions","regex","RegExp","items","sort","filter","test","suggestionsLiked","textLiked","onTextChangedDisliked","suggestionsDisliked","textDisliked","alreadySet","amountOfLikes","amountOfDislikes","boxes","getItemLocal","success","updateAccount","tempIndex","returnList","class","renderSuggestionsLiked","doChange","renderSuggestionsDisliked","map","suggestionSelectedLiked","suggestionSelectedDisliked","buttonNb","getRender","renderButton","App","startwebsocket","basename","exact","path","component","UserSelection","f","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.af219630.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LandingPage.css'\r\n\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <div className=\"Circle\">\r\n\r\n                </div>\r\n                <h1 className=\"fadeInLeft1\">Welcome!</h1>\r\n                <p className=\"textLanding fadeInLeft2\">Let's get you started.</p>\r\n                <Link to=\"/profile\">\r\n                    <button className=\"StartButton fadeInLeft3\"><b>CONTINUE</b></button>\r\n                </Link>\r\n                <div className='plate1 fadeInRight1'> </div>\r\n                <div className='plate2 fadeInRight2'> </div>\r\n                <div className='plate3 fadeInRight3'> </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal, {clickConfirm} from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nimport {  Popup as InfoPopup } from \"semantic-ui-react\";\r\nimport ReactSwing from \"react-swing\";\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\n\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nclass Recommendations extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.goToRecommends=this.goToRecommends.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        this.saveAlert = this.saveAlert.bind(this);\r\n        this.createCards = this.createCards.bind(this);\r\n\r\n    /*\r\n        this.socket.onopen = () => {\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let payload= {\r\n                action: \"initialise\"\r\n            };\r\n            for (let i = users.length-1; i>=0; i--) {\r\n                if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                    let liked=users[i].Liked;\r\n                     payload={\r\n                        action: \"initialise\",\r\n                        favorites:liked,\r\n                         name: localStorage.getItem('currentUser')\r\n                    };\r\n                }\r\n            }\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                if(this.state.favorite){\r\n                    this.goToFavorites()\r\n                }\r\n                else{\r\n                    this.getRecommendations();\r\n                }\r\n            }\r\n            // do something after connection is opened\r\n        };\r\n\r\n\r\n     */\r\n        this.state.favorite=JSON.parse(localStorage.getItem('favorite'));\r\n/*\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                       // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    let users = JSON.parse(localStorage.getItem('users'));\r\n                    for (let i = users.length-1; i>=0; i--) {\r\n                        if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                            if(users[i].FirstTime1){\r\n                                Swal.fire({\r\n\r\n                                    text: \"Drag an item left to dislike it, or right to like it.\",\r\n                                    icon: 'info',\r\n                                    confirmButtonText: 'Okay!'\r\n                                }).then(() => {{\r\n                                    if (clickConfirm) {\r\n                                        Swal.fire({\r\n                                            text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n\r\n                                            icon: 'info',\r\n                                            confirmButtonText: 'Okay!'\r\n                                        }).then(() => {\r\n                                            if (clickConfirm) {\r\n                                                Swal.fire({\r\n                                                    text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                    icon: 'info',\r\n                                                    confirmButtonText: 'Okay!'\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                }});\r\n                                users[i].FirstTime1 = false;\r\n                                users[i].FirstTime2 = false;\r\n                                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                            }\r\n                            else if(users[i].FirstTime2){\r\n                                Swal.fire({\r\n                                    title: \"You're getting the hang of this!\",\r\n                                    icon: 'success',\r\n                                    confirmButtonText: 'Okay!'\r\n                                }).then(() => {\r\n                                    if (clickConfirm) {\r\n                                        Swal.fire({\r\n                                            text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n\r\n                                            icon: 'info',\r\n                                            confirmButtonText: 'Okay!'\r\n                                        }).then(() => {\r\n                                            if (clickConfirm) {\r\n                                                Swal.fire({\r\n                                                    text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                    icon: 'info',\r\n                                                    confirmButtonText: 'Okay!'\r\n                                                })\r\n                                            }\r\n                                        })\r\n                                    }\r\n                                });\r\n                                users[i].FirstTime2 = false;\r\n                                localStorage.setItem('users', JSON.stringify(users));\r\n                            }\r\n                        }\r\n                        }\r\n\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n                    localStorage.setItem(\"viewInit\", 1);\r\n                    if(JSON.parse(localStorage.getItem('viewInit'))==1 && this.state.initialised!=true){\r\n                        this.state.view=0;\r\n                        sleep(5).then(() => {\r\n                            this.state.view= JSON.parse(localStorage.getItem('viewInit'));\r\n                            if(this.state.view==1){\r\n                                this.state.swipednumber=0;\r\n                                const value = (this.state.view + 1) % 2;\r\n                                localStorage.setItem(\"view\", value);\r\n                                this.state.initialised=true;\r\n                                this.setState({view: 1});\r\n                            }\r\n                        })\r\n\r\n\r\n                    }\r\n                    break;\r\n                case \"favorites\":\r\n\r\n                    if(this.loading){\r\n                       // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                        let users = JSON.parse(localStorage.getItem('users'));\r\n                        for (let i = users.length-1; i>=0; i--) {\r\n                            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                               if(users[i].FirstTime3){\r\n                                   Swal.fire({\r\n                                       title: \"Do not lose any of your liked recipes!\",\r\n                                       text: \"You can find them here!\",\r\n                                       icon:\"info\"\r\n                                   });\r\n                                   users[i].FirstTime3 = false;\r\n                                   localStorage.setItem('users', JSON.stringify(users));\r\n                               }\r\n                            }\r\n                        }\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                  //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n\r\n */\r\n        if(this.state.swipednumber===undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n\r\n        if(this.state.favorite){\r\n            this.goToFavorites()\r\n        }\r\n        if(this.state.initialised==undefined||this.state.initialised==false){\r\n            this.state.view=0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    fakemessage(message) {\r\n        let translation = JSON.parse(message.data);\r\n        console.log(translation);\r\n        switch (translation.action) {\r\n            case \"Recommends\":\r\n                if (this.loading) {\r\n                    this.loading = false;\r\n                    // alert(\"this\");\r\n                    Swal.fire({\r\n                        title: \"Finished!\",\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n                }\r\n                let users = JSON.parse(localStorage.getItem('users'));\r\n                for (let i = users.length - 1; i >= 0; i--) {\r\n                    if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                        if (users[i].FirstTime1) {\r\n                            Swal.fire({\r\n\r\n                                text: \"Drag an item left to dislike it, or right to like it.\",\r\n                                icon: 'info',\r\n                                confirmButtonText: 'Okay!'\r\n                            }).then(() => {\r\n                                if (clickConfirm) {\r\n                                    Swal.fire({\r\n                                        text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n                                        icon: 'info',\r\n                                        confirmButtonText: 'Okay!'\r\n                                    }).then(() => {\r\n                                        if (clickConfirm) {\r\n                                            Swal.fire({\r\n                                                text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                icon: 'info',\r\n                                                confirmButtonText: 'Okay!'\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                            });\r\n                            users[i].FirstTime1 = false;\r\n                            users[i].FirstTime2 = false;\r\n                            localStorage.setItem(\"users\", JSON.stringify(users));\r\n                        } else if (users[i].FirstTime2) {\r\n                            Swal.fire({\r\n                                title: \"You're getting the hang of this!\",\r\n                                icon: 'success',\r\n                                confirmButtonText: 'Okay!'\r\n                            }).then(() => {\r\n                                if (clickConfirm) {\r\n                                    Swal.fire({\r\n                                        text: \"To see the recipe of the dish or the nutritional values, press the small buttons on the cards.\",\r\n                                        icon: 'info',\r\n                                        confirmButtonText: 'Okay!'\r\n                                    }).then(() => {\r\n                                        if (clickConfirm) {\r\n                                            Swal.fire({\r\n                                                text: \"You can navigate to your profile and to your liked items by clicking on the icons on top of the page. \",\r\n                                                icon: 'info',\r\n                                                confirmButtonText: 'Okay!'\r\n                                            })\r\n                                        }\r\n                                    })\r\n                                }\r\n                            });\r\n                            users[i].FirstTime2 = false;\r\n                            localStorage.setItem('users', JSON.stringify(users));\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                let initialfoods = translation.recommends;\r\n                let initialtags = translation.tags;\r\n                let initialimages = translation.images;\r\n                let shuffled = this.filterfoods(initialfoods, initialtags, initialimages);\r\n                let filteredfoods = shuffled[0];\r\n                let filteredTags = shuffled[1];\r\n                let filteredImages = shuffled[2];\r\n                this.setState({tags: filteredTags});\r\n                this.setState({foods: filteredfoods});\r\n                this.setState({images: filteredImages});\r\n                localStorage.setItem(\"viewInit\", 1);\r\n                if (JSON.parse(localStorage.getItem('viewInit')) == 1 && this.state.initialised != true) {\r\n                    this.state.view = 0;\r\n                    sleep(5).then(() => {\r\n                        this.state.view = JSON.parse(localStorage.getItem('viewInit'));\r\n                        if (this.state.view == 1) {\r\n                            this.state.swipednumber = 0;\r\n                            const value = (this.state.view + 1) % 2;\r\n                            localStorage.setItem(\"view\", value);\r\n                            this.state.initialised = true;\r\n                            this.setState({view: 1});\r\n                        }\r\n                    })\r\n\r\n\r\n                }\r\n                break;\r\n            case \"favorites\":\r\n\r\n                if (this.loading) {\r\n                    // alert(\"this favorites\");\r\n                    this.loading = false;\r\n                    Swal.fire({\r\n                        title: \"Finished!\",\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n                    let users = JSON.parse(localStorage.getItem('users'));\r\n                    for (let i = users.length - 1; i >= 0; i--) {\r\n                        if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                            if (users[i].FirstTime3) {\r\n                                Swal.fire({\r\n                                    title: \"Do not lose any of your liked recipes!\",\r\n                                    text: \"You can find them here!\",\r\n                                    icon: \"info\"\r\n                                });\r\n                                users[i].FirstTime3 = false;\r\n                                localStorage.setItem('users', JSON.stringify(users));\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                this.setState({favorites: translation.favorites});\r\n//  alert('favorites set '+ translation.favorites);\r\n                break;\r\n            case \"Similar\":\r\n\r\n// alert(\"this favorites\");\r\n                this.loading = false;\r\n                Swal.fire({\r\n                    title: \"Finished!\",\r\n                    showConfirmButton: false,\r\n                    timer: 1000\r\n                });\r\n\r\n                this.setState({similar: translation.similar});\r\n                break;\r\n            case \"Recipe\":\r\n                this.setState({recipe: translation.recipe});\r\n                break;\r\n            case \"Nutrition\":\r\n                this.setState({nutrition: translation.nutrition});\r\n                break;\r\n            case \"Ingredients\":\r\n                this.setState({ingredients: translation.ingredients});\r\n                break;\r\n        }\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n        }\r\n        let answer=[];\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n        if(this.socket!==undefined){\r\n            return this.socket;\r\n        }\r\n        this.setState({favorite: false});\r\n       this.state.noserver=true;\r\n        //my public ip should work if my server is running\r\n       // return new WebSocket(\"ws://[2a02:a03f:4a1b:5100:8473:6145:3b2f:6b2e]:9000\");\r\n    }\r\n\r\n    getInfo(string) {\r\n\r\n\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n    }\r\n    sendRecipe(name) {\r\n        name=name.toLowerCase();\r\n        console.log(\"send recipe\");\r\n       // this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n            let message2={\r\n                recipe:[\"Stir everything together in a 4 1\\/2 quart or larger slow cooker.\",\"Set power to low and cook for 6 hours or longer (we usually let this cook for 10 hours).\",\"Serve with cheese or sour cream if you wish.\"],\r\n                action:\"Recipe\"\r\n            }\r\n            this.fakemessage(message2);\r\n\r\n\r\n            let message={\r\n                ingredients:[\"1 (15 ounce) can black beans, drained and rinsed (or 1 1\\/2 - 2 cups cooked beans)\",\"1 (15 ounce) can navy beans, drained and rinsed (or 1 1\\/2 - 2 cups cooked beans)\",\"1 (14 1\\/2 ounce) can diced tomatoes\",\"1 (14 1\\/2 ounce) can diced tomatoes and green chilies or (14 1\\/2 ounce) can diced tomatoes with jalapenos\",\"1 cup onion, chopped\",\"6 garlic cloves, minced\",\"2 tablespoons chili powder\",\"1 tablespoon sweet Hungarian paprika\",\"1 tablespoon dried cilantro (optional)\",\"1\\/2 teaspoon fresh coarse ground black pepper\",\"1 teaspoon chipotle chile, minced\"],\r\n                action:\"Ingredients\"\r\n            }\r\n            this.fakemessage(message);\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name){\r\n        name=name.toLowerCase();\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n           if(likedItems[i]!=name){\r\n               let item = {};\r\n               item['name'] = likedItems[i];\r\n               item['rating']= 1.0;\r\n               prolist.push(item);\r\n           }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        this.state.proto=!this.state.proto;\r\n        if(this.sendable) {\r\n            if(this.state.proto){\r\n                this.socket.send(JSON.stringify(similarpayload));\r\n                Swal.fire({\r\n                    title: \"Loading...\",\r\n                    text: \"Please wait\",\r\n                    showConfirmButton: false,\r\n                    allowOutsideClick: false,\r\n                });\r\n            }\r\n\r\n        }\r\n        let message={\r\n            nutrition:[\"123.1\",\"2.0\",\"16.0\",\"0.0\",\"11.0\",\"1.0\",\"8.0\"],\r\n            action:\"Nutrition\"\r\n        }\r\n        this.fakemessage(message);\r\n        let message2={\r\n            similar:[{\"image\":\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/11\\/05\\/46\\/picMI3hkn.jpg\",\"matchfactor\":0.7333333333333333,\"name\":\"black   white vegetarian chipotle chili  crock pot\"},{\"image\":\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/27\\/17\\/5\\/27175.jpg\",\"matchfactor\":0.4666666666666667,\"name\":\"chocolate raspberry cheesecake trifle\"},{\"image\":\"https:\\/\\/images.unsplash.com\\/photo-1542384557-0824d90731ee?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\"matchfactor\":0.4,\"name\":\"oriental crunch burgers\"},{\"image\":\"https:\\/\\/images.unsplash.com\\/photo-1552246098-2a991afa1c6c?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\"matchfactor\":-0.4,\"name\":\"egg  ham and cheese open faced english muffin\"},{\"image\":\"https:\\/\\/images.unsplash.com\\/photo-1550825570-8ae96cf12d87?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\"matchfactor\":-0.5333333333333333,\"name\":\"easy mango salsa\"}],\r\n            action:\"Similar\"\r\n\r\n        }\r\n        this.fakemessage(message2);\r\n\r\n    }\r\n\r\n    getFavorites(){\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let likedItems = null;\r\n            for (let i = users.length - 1; i >= 0; i--) {\r\n                if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                    likedItems = users[i].Liked;\r\n                }\r\n            }\r\n            if (likedItems == null) {\r\n                likedItems = [];\r\n            }\r\n\r\n            let payload = {\r\n                action: \"Favorites\",\r\n                prolist: [{name: \"hot tamale  burgers\", rating: 0.5}]\r\n            };\r\n\r\n            const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\", \"low-cholesterol\", \"kosher\", \"ramadan\", \"low-protein\"];\r\n            const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n            // Creating prolist\r\n            let prolist = [];\r\n\r\n            for (let i = 0; i < likedItems.length; i++) {\r\n                let item = {};\r\n                item['name'] = likedItems[i];\r\n                item['rating'] = 1.0;\r\n                prolist.push(item)\r\n            }\r\n\r\n            payload.prolist = prolist;\r\n            console.log(prolist);\r\n\r\n            console.log(payload);\r\n\r\n            if (this.sendable) {\r\n                this.socket.send(JSON.stringify(payload));\r\n                Swal.fire({\r\n                    title: \"Loading...\",\r\n                    text: \"Please wait\",\r\n                    showConfirmButton: false,\r\n                    allowOutsideClick: false,\r\n                });\r\n                this.loading = true;\r\n            }\r\n            let message = {\r\n                favorites: [{\r\n                    \"image\": \"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/11\\/05\\/46\\/picMI3hkn.jpg\",\r\n                    \"name\": \"black   white vegetarian chipotle chili  crock pot\",\r\n                    \"tags\": [\"vegan\", \"vegetarian\", \"inexpensive\"]\r\n                }, {\r\n                    \"image\": \"https:\\/\\/images.unsplash.com\\/photo-1542384557-0824d90731ee?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\r\n                    \"name\": \"oriental crunch burgers\",\r\n                    \"tags\": [\"oven\", \"meat\"]\r\n                }, {\r\n                    \"image\": \"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/27\\/17\\/5\\/27175.jpg\",\r\n                    \"name\": \"chocolate raspberry cheesecake trifle\",\r\n                    \"tags\": [\"vegetarian\", \"desserts\"]\r\n                }],\r\n                action: \"favorites\"\r\n            }\r\n            this.fakemessage(message);\r\n\r\n    }\r\n\r\n    getRecommendations(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempUserIndex = -1;\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempUserIndex = i;\r\n                likedItems=[];\r\n                while(likedItems.size<users[i].Liked.Length||likedItems.size<7){\r\n                    let random=      Math.random(users[i].Liked.length);\r\n                    if(likedItems.includes(users[i].Liked[random],0)){\r\n                        likedItems.push(users[i].Liked[random])\r\n                    }\r\n\r\n\r\n                }\r\n                dislikedItems=[];\r\n                while(dislikedItems.size<users[i].Disliked.Length||dislikedItems.size<5){\r\n                    let random=      Math.random(users[i].DisLiked.length);\r\n                    if(dislikedItems.includes(users[i].Disliked[random],0)){\r\n                        dislikedItems.push(users[i].Disliked[random])\r\n                    }\r\n\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n        for (let k = 0; k<names.length; k++){\r\n            names[k] = names[k].toLowerCase();\r\n        }\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        console.log(payload)\r\n        if(this.sendable) {\r\n\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.state.initialised=false;\r\n            this.loading=true;\r\n        }\r\n        let message={\r\n            action: \"Recommends\",\r\n            images:[\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/18\\/66\\/50\\/pic7Hlb5A.jpg\",\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/26\\/47\\/02\\/picTs7xCP.jpg\",\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/68\\/16\\/0\\/picHY17iL.jpg\",\"https:\\/\\/images.unsplash.com\\/photo-1467630144534-da2b634ce269?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/31\\/95\\/96\\/picQRQQwF.jpg\",\"https:\\/\\/images.unsplash.com\\/photo-1464052259809-c19ec2ddfc5f?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\"https:\\/\\/img.sndimg.com\\/food\\/image\\/upload\\/w_555,h_416,c_fit,fl_progressive,q_95\\/v1\\/img\\/recipes\\/31\\/16\\/97\\/piczU9Utc.jpg\"],\r\n            recommends:[\"cocoa pebbles cereal cookies\",\"ana s asian ny strip steak\",\"pb j energy oat bars\",\"pistachio pudding pie\",\"kittencal s chicken parmesan  low fat and delicious\",\"tilapia tatsuta age\",\"wisconsin cheese soup\"],\r\n            tags:[[\"desserts\"],[\"meat\"],[\"oven\",\"vegetarian\",\"desserts\"],[\"desserts\"],[\"oven\",\"meat\"],[\"fish\"],[\"meat\"]]\r\n        }\r\n        this.fakemessage(message);\r\n\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n        if(nutritionalInfo!==undefined){\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                    }\r\n            }\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n        nutritionalInfoHtml.push(\r\n            <div className=\"row\">\r\n                <div className=\"Nutritioncolumn\">\r\n                    <div className=\"popupTextTitle\">\r\n                        Nutritional info:\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"textrow\">\r\n                        <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                        <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"popupTextTitle2\">\r\n                        Because you liked:\r\n                        <br/>\r\n                    </div>\r\n                    {explanationHtmlTemp}\r\n                </div>\r\n            </div>\r\n\r\n        );}\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopup(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                        <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>);\r\n        return html;\r\n    }\r\n\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({opened: name});this.logAction(\"get recipe\",name)}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.opened==name} onClick={() => this.setState({opened: \"none\"})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => {this.setState({opened: \"none\"});this.logAction(\"get recipe\",name) }}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({opened: \"none\"})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined) {\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n            <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n            </img>\r\n            <Popup  open={false} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                      position=\"right center\" >\r\n                <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                    <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopened: name});this.logAction(\"get nutritional values\",name)}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopened==name} onClick={() => this.setState({nutritionopened: 'none'})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopened: \"none\"})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => {this.setState({nutritionopened: \"none\"});this.logAction(\"get nutritional values\",name)}}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n    saveAlert() {\r\n       /* Swal.fire({\r\n            title: 'Saved!',\r\n            text: \"Your liked and disliked meals are saved.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Great!'\r\n        });*/\r\n        this.getRecommendations();\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", 1);\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        let  value = (this.state.view + 1) % 2;\r\n        localStorage.setItem(\"viewInit\", value);\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n\r\n        localStorage.setItem(\"view\", value);\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(true));\r\n        this.setState({favorite: true});\r\n\r\n    }\r\n    goToRecommends(){\r\n\r\n        this.getRecommendations();\r\n\r\n        localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n        this.setState({view: 0,favorite: false, initialised: false});\r\n\r\n\r\n    }\r\n\r\n/*\r\n    generateView() {\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n                    Times clicked: {this.state.timesClicked}\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            if (this.state.view === 0) {\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>SAVE</b></button>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n            else {\r\n                if (this.state.swipednumber < 6) {\r\n                    return (\r\n                        <div className=\"Span\">\r\n                        <div style={wrapperStyles}>\r\n\r\n                            {this.state.foods.length > 0 ? (\r\n                                <div style={wrapperStyles}>\r\n\r\n                                    <Swipeable\r\n                                        buttons={({left, right}) => (\r\n                                            <div style={actionsStyles}>\r\n                                                <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                            </div>\r\n                                        )}\r\n                                        onAfterSwipe={this.remove}\r\n                                        onSwipe={this.swipeItem}\r\n                                    >\r\n\r\n                                        <div className=\"FoodCard fadeInLeft0\">\r\n                                            <div className=\"FoodHeader\">\r\n                                                <b>{capitalizeFLetter(this.getname(this.state.swipednumber))}</b>\r\n                                            </div>\r\n                                            <div className=\"table\">\r\n\r\n                                                    <div className=\"tablerow1\">\r\n                                                        {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n                                                    </div>\r\n                                                    <div className=\"tablerow2\">\r\n                                                        {this.generateBadges(this.state.swipednumber)}\r\n                                                    </div>\r\n                                                    <div className=\"tablerow3\">\r\n                                                        {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                        {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                    </div>\r\n                                            </div>\r\n\r\n                                        </div>\r\n                                    </Swipeable>\r\n\r\n                                </div>\r\n                            ) : (\r\n                                <div >\r\n                                    <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                    <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                    <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div >\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                            <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                            <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    } */\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card\"  ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{capitalizeFLetter(this.state.foods[i])}</b></div>\r\n                {this.recipePopupFromImage(this.getname(i),this.getimage(i))}\r\n                {this.generateBadges(i)}\r\n                <div className=\"tablerow3\">\r\n                    {this.recipePopupForTinder(this.state.foods[i],this.getimage(i))}\r\n                    {this.nutritionalPopupForTinder(this.state.foods[i])}\r\n                </div>\r\n            </div>)\r\n\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateView() {\r\n\r\n\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.view === 0) {\r\n\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>Recommend!</b></button>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n\r\n\r\n            else {\r\n\r\n                return (\r\n                    <div>\r\n                        <div id=\"viewport\">\r\n                            <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                            <div className=\"likeStack\"><b>Like</b></div>\r\n                            <ReactSwing\r\n                                className=\"stack\"\r\n                                tagName=\"div\"\r\n                                setStack={stack => this.setState({ stack })}\r\n                                ref={this.stackEl}\r\n                                throwoutleft={()=>this.dislike(\"\")}\r\n                                throwoutright={()=>this.like(\"\")}\r\n                            >\r\n                                {this.createCards()}\r\n                            </ReactSwing>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <button className=\"NextButton Green\" onClick={this.saveAlert}><b>Recommend!</b></button>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n       // alert(JSON.stringify(favorites));\r\n        let html = [];\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n            let name =currentfavorite[\"name\"];\r\n            let image=currentfavorite[\"image\"];\r\n            let badges = [];\r\n\r\n            if(currentfavorite[\"tags\"]==undefined){\r\n\r\n            }\r\n            else{\r\n                if(currentfavorite[\"tags\"].length!=0) {\r\n\r\n\r\n                    if (currentfavorite[\"tags\"].length <= 1) {\r\n                        badges.push(<button className={\"FoodBadge \" + currentfavorite[\"tags\"]}></button>)\r\n                    } else {\r\n                        currentfavorite[\"tags\"].forEach(function (item, index) {\r\n                            let badgeName = \"FoodBadge \" + item;\r\n                            if (item === \"15-minutes-or-less\") {\r\n                                badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                            }\r\n                            badges.push(<button className={badgeName}></button>);\r\n\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedLeft:()=>this.unlike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined) {\r\n                if (this.state.showThumbs == name || this.state.translation[name] != undefined) {\r\n                    if (Math.abs(this.state.shadownr) > 10) {\r\n                        if (this.state.shadownr > 0) {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimagewithshadow2\"/>\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimage2\"/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"dislikedimage2\"/>\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} }  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={image} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(name,this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}}>\r\n                                {this.nutritionalPopup(name)}\r\n                                    </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>);\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n            assets[food].forEach(function (item, i) {\r\n                let badgeName = \"FoodBadge \" + item;\r\n                if (item === \"15-minutes-or-less\") {\r\n                    badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                }\r\n                badges.push(<InfoPopup  position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n\r\n            });\r\n        }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>0){\r\n                if(assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<InfoPopup position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n                    });\r\n                }\r\n\r\n            }\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                            <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                                      onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                               , opacity: this.transparfunc(name)} } onClick={() => {}}  >\r\n                                <div className=\"rowbutton\">\r\n                                    <div className=\"columbuttonimage\">\r\n                                        <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                                    </div>\r\n                                    <div className=\"columtitle\">\r\n                                        <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                        <div className=\"foodtags2\">\r\n                                            <div className=\"badgesContainer\">\r\n                                                {badges}\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"informationbuttonscolum\">\r\n                                        <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                            {this.recipePopup(foods[i],this.getimage(i))}\r\n                                        </div>\r\n                                        <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}} >\r\n                                            {this.nutritionalPopup(foods[i])}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </button>\r\n                </Swiping>\r\n                        </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    like(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t=0;\r\n                for(let j=0;j<foods.length;j++){\r\n                    if(foods[j]!=undefined){\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if(f1===f2){\r\n                            t=j;\r\n                        }\r\n                    }\r\n                }\r\n\r\n               // alert(liked.length);\r\n                if( liked.length==undefined){\r\n                    let newliked=[];\r\n                    if(liked!=undefined){\r\n                        newliked.push(liked);\r\n                    }\r\n\r\n                    newliked.push(f2);\r\n                    liked=newliked;\r\n                }\r\n                else{\r\n\r\n                    liked.push(f2);\r\n                }\r\n\r\n                foods.splice(t,1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t,1);\r\n                this.setState({tags: tags});\r\n                images.splice(t,1);\r\n                this.setState({images: images});\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n               // alert(users[i].Liked);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unlike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n\r\n                let t = 0;\r\n                for (let j = 0; j < liked.length; j++) {\r\n                    if(liked[j]!=undefined) {\r\n                        let f1 = liked[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                if (liked==undefined){\r\n                    liked=[];\r\n                }\r\n\r\n                liked.splice(t, 1);\r\n                let favorites=this.state.favorites;\r\n                favorites.splice(t,1);\r\n                this.setState({liked: liked});\r\n                this.setState({favorites: favorites});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.setState({likedItems: liked});\r\n                this.logAction(\"unlike\", name);\r\n\r\n                break;\r\n            }\r\n            this.setState({favorite:true});\r\n        }\r\n\r\n    }\r\n    dislike(name){\r\n\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    if(foods[j]!=undefined) {\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            localStorage.setItem(\"n\", \"kked\")\r\n\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t, 1);\r\n                this.setState({tags: tags});\r\n                images.splice(t, 1);\r\n                this.setState({images: images});\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n                disliked.push(f2);\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", f2);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"viewInit\")) === 0){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"swipe mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    endSwipe(){\r\n        this.setState({swiping: false});\r\n        this.setState({shadownr: 0});\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n\r\n    swiped(eventData,name) {\r\n        this.setState({swiping: true});\r\n        this.setState({shadownr: eventData.deltaX});\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n    }\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n\r\n    //RENDER\r\n    render() {\r\n\r\n        if(this.state.favorite){\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Favorites</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n        // Favorites view\r\n        else{\r\n           let  estratext;\r\n            if(this.state.tutor==undefined) {\r\n            }\r\n\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Recommendations</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        //<Link to=\"/recommendations\"><button onclick={() => localStorage.setItem(\"favorite\", JSON.stringify(true)} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n    }\r\n}\r\n\r\nexport default Recommendations;\r\n","import React, {Component} from \"react\";\r\nimport Swipeable from \"react-swipy\";\r\nimport './tinderCards.css'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"250px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12\r\n};\r\n\r\nclass TinderCards extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        let likedItems = [];\r\n        let dislikedItems = [];\r\n        if(localStorage.getItem(\"likedItems\") != null){\r\n            likedItems = JSON.parse(localStorage.getItem(\"likedItems\"));\r\n        }\r\n        else localStorage.setItem(\"likedItems\", JSON.stringify(likedItems));\r\n        if(localStorage.getItem(\"dislikedItems\") != null){\r\n            dislikedItems = JSON.parse(localStorage.getItem(\"dislikedItems\"));\r\n        }\r\n        else localStorage.setItem(\"dislikedItems\", JSON.stringify(dislikedItems));\r\n        this.state = {\r\n            cards: [\"little kick  jalapeno burgers\", \"hot tamale  burgers\", \"hot tamale  burgers\"],\r\n            likedItems: likedItems,\r\n            dislikedItems: dislikedItems,\r\n        };\r\n    }\r\n\r\n    remove = () =>\r\n        this.setState(({cards}) => ({\r\n            cards: cards.slice(1, cards.length),\r\n        }));\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.cards[0];\r\n\r\n\r\n        let liked = JSON.parse(localStorage.getItem(\"likedItems\"));\r\n        let disliked = JSON.parse(localStorage.getItem(\"dislikedItems\"));\r\n\r\n\r\n        if (action === 'left') {\r\n\r\n            let index = liked.indexOf(thisCard);\r\n            if(index >= 0){\r\n                liked.splice(index, 1);\r\n            }\r\n            if(!disliked.includes(thisCard)) {\r\n                disliked.push(thisCard);\r\n            }\r\n\r\n\r\n        }\r\n        else if (action === 'right') {\r\n            let index = disliked.indexOf(thisCard);\r\n            if(index >= 0){\r\n                disliked.splice(index, 1);\r\n            }\r\n            if(!liked.includes(thisCard)){\r\n                liked.push(thisCard);\r\n\r\n            }\r\n\r\n        }\r\n        this.state.likedItems = liked;\r\n        this.state.dislikedItems = disliked;\r\n        localStorage.setItem(\"likedItems\", JSON.stringify(this.state.likedItems));\r\n        localStorage.setItem(\"dislikedItems\", JSON.stringify(this.state.dislikedItems));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const {cards} = this.state;\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"PageHeader\"> <b className=\"PageTitle\">Recommendations</b>\r\n                    </div>\r\n                    <div style={wrapperStyles}>\r\n                        {cards.length > 0 ? (\r\n                            <div style={wrapperStyles}>\r\n                                <Swipeable\r\n                                    buttons={({left, right}) => (\r\n                                        <div style={actionsStyles}>\r\n                                            <button className=\"tinderButton dislike\" onClick={left}><b>Reject</b></button>\r\n                                            <button className=\"tinderButton like\" onClick={right}><b>Accept</b></button>\r\n                                        </div>\r\n                                    )}\r\n                                    onAfterSwipe={this.remove}\r\n                                    onSwipe={this.swipeItem}\r\n                                >\r\n                                    <div className=\"FoodCard\">\r\n                                        <div className=\"FoodHeader\">\r\n                                            <b>{cards[0]}</b>\r\n                                        </div>\r\n                                        <p>\r\n                                            Recipe goes here.\r\n                                        </p>\r\n                                    </div>\r\n                                </Swipeable>\r\n                            </div>\r\n                        ) : (\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                        )}\r\n                    </div>\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Swal from 'sweetalert2';\r\n\r\nclass UserProfile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(localStorage.getItem(\"users\")===null){\r\n            let tempList = [];\r\n            localStorage.setItem(\"users\", JSON.stringify(tempList));\r\n        }\r\n        this.state = {\r\n            name : \"\"\r\n        }\r\n    }\r\n    handleChange = event => {\r\n        this.setState({ name: event.target.value });\r\n    };\r\n    updateUsers(){\r\n\r\n        let tempUsers = JSON.parse(localStorage.getItem('users'));\r\n        let alreadyInUsers = false;\r\n        for (let i = 0; i<tempUsers.length;i++){\r\n            if(tempUsers[i].Name === this.state.name) {\r\n                alreadyInUsers = true;\r\n                break;\r\n            }\r\n        }\r\n        if (!alreadyInUsers){\r\n            let emptyDict = {\r\n                Name: this.state.name,\r\n                Preferences: [\"vegan\", \"vegetarian\", \"gluten-free\"],\r\n                Allergies: [\"nuts\", \"lactose\", \"seafood\"],\r\n                Log: [],\r\n                Liked: [],\r\n                Disliked: [],\r\n                FirstTime: true,\r\n                FirstTime1: true,\r\n                FirstTime2: true,\r\n                FirstTime3: true,\r\n                booleansPreferences: [false, false, false],\r\n                booleanAllergies: [false, false, false]\r\n            };\r\n            tempUsers.push(emptyDict);\r\n            localStorage.setItem('users', JSON.stringify(tempUsers));\r\n        }\r\n\r\n        localStorage.setItem('currentUser', this.state.name);\r\n\r\n    }\r\n    handleTest(e) {\r\n        if(localStorage.getItem(\"viewInit\") ==undefined){\r\n            localStorage.setItem(\"viewInit\", \"1\")\r\n        }\r\n\r\n        if (e.ctrlKey && e.charCode == 13 ) {\r\n            localStorage.setItem(\"viewInit\", ((JSON.parse( localStorage.getItem(\"viewInit\")))+1)%2);\r\n        }\r\n\r\n\r\n        else if( e.charCode==13){\r\n            let users = JSON.parse(localStorage.getItem(\"users\"));\r\n            let logForUser = users[0].Log;\r\n            let s = \"\";\r\n            let k = \"\";\r\n            for(let j = 0; j<users.length;j++){\r\n                logForUser = users[j].Log;\r\n                k = k+users[j].Name;\r\n                if(j!=users.length-1) {\r\n                    k = k+\", \";\r\n                }\r\n                for(let i = 0; i< logForUser.length; i++){\r\n                    s = s + logForUser[i];\r\n                    if(i!=logForUser.length -1) s =s +\", \"\r\n                }\r\n                if(j!=users.length-1) {\r\n                    s= s+\"; \";\r\n                }\r\n            }\r\n\r\n            localStorage.setItem(\"logForUser\", s);\r\n            localStorage.setItem(\"usersString\", k);\r\n        }\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"DarkBackground\">\r\n                        <div>\r\n                            <h4 className=\"fadeInLeft0\">Hello there! Thank you for wanting to participate in our test.</h4>\r\n                            <h4 className=\"fadeInLeft1\"> Before we start, can we please get your name?</h4>\r\n                            <input\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n                                className={\"textBox fadeInLeft2\"}\r\n                                placeholder={\"Your name\"}\r\n                                value={this.state.username}\r\n                                onChange={this.handleChange}\r\n                                onKeyPress={this.handleTest}\r\n                            />\r\n\r\n                        </div>\r\n                        <Link to=\"/home\"><button className=\"NextButton White fadeInLeft3\"\r\n                             onClick={\r\n                                ()=>{this.updateUsers()}\r\n                             }>\r\n                        <b>NEXT</b></button></Link>\r\n                    </div>\r\n                </header>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserProfile;\r\n","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nlet listOfTimeStamps = [];\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\n\r\n\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\n\r\nclass GettingToKnow extends React.Component {\r\n    constructor() {\r\n        super();\r\n        if(localStorage.getItem(\"listOfTimeStamps\") === null){\r\n            let newList = [[\"time stamp\", \"action\", \"view\", \"recipe\"]];\r\n            localStorage.setItem(\"listOfTimeStamps\", JSON.stringify(newList));\r\n        }\r\n\r\n        this.state = {\r\n            timesClicked: 0,\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n            view: 0,\r\n\r\n        };\r\n\r\n        this.socket=this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.increaseCounter=this.increaseCounter.bind(this);\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n\r\n        let payload={\r\n            action: \"initialise\"\r\n        };\r\n        this.socket.onopen = () => {\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                this.getRecommendations();\r\n            }\r\n\r\n            // do something after connection is opened\r\n        };\r\n\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                        // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n\r\n                    break;\r\n                case \"favorites\":\r\n                    if(this.loading){\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                    //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n                    localStorage.setItem(\"kkk\", JSON.stringify(translation))\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n        if(this.state.swipednumber==undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n\r\n        }\r\n        let answer=[]\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n\r\n        if(this.socket!=undefined){\r\n\r\n            return this.socket;\r\n        }\r\n        this.state.favorite=false;\r\n        return new WebSocket(\"ws://[2a02:a03f:4a1b:5100:8473:6145:3b2f:6b2e]:9000\");\r\n    }\r\n\r\n    increaseCounter() {\r\n\r\n        console.log(\"increased\");\r\n        let clicked = this.state.timesClicked + 1;\r\n        this.setState({timesClicked: clicked})\r\n    }\r\n    getInfo(string) {\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n\r\n    }\r\n    sendRecipe(name) {\r\n\r\n        console.log(\"send recipe\");\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n\r\n\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name) {\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(similarpayload));\r\n\r\n        }\r\n    }\r\n\r\n    getFavorites(){\r\n\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        let payload = {\r\n            action: \"Favorites\",\r\n\r\n\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n\r\n\r\n\r\n        const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\",\"low-cholesterol\",\"kosher\",\"ramadan\", \"low-protein\"];\r\n        const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n\r\n\r\n        console.log(payload);\r\n\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        /*\r\n        Swal.fire({\r\n            title: 'Results',\r\n            text: \"Waiting for results\",\r\n            icon: 'load',\r\n\r\n        });\r\n\r\n         */\r\n    }\r\n\r\n    getRecommendations(recommendation){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let tempUserIndex = -1;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n                tempUserIndex = i;\r\n                break;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n\r\n\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.loading=true;\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n\r\n            }\r\n        }\r\n        if(similarMeals!==undefined){\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n        }\r\n\r\n\r\n\r\n        nutritionalInfoHtml.push(\r\n            <div className=\"row\">\r\n                <div className=\"Nutritioncolumn\">\r\n                    <div className=\"popupTextTitle\">\r\n                        Nutritional info:\r\n                        <br/>\r\n                    </div>\r\n                    <div className=\"textrow\">\r\n                        <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                        <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"column\">\r\n                    <div className=\"popupTextTitle2\">\r\n                        Because you liked:\r\n                        <br/>\r\n                    </div>\r\n                    {explanationHtmlTemp}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n    recipePopup(name,image){\r\n\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n\r\n                    {popUpHtml}\r\n                </div>\r\n\r\n            </Popup>);\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n\r\n                </img>\r\n                <Popup  open={this.state.open} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {popUpHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.open} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        const value = (this.state.view + 1) % 2;\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", value.toString());\r\n    }\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopen: true});}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopen} onClick={() => this.setState({nutritionopen: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopen: false})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({nutritionopen: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        this.setState({favorite: true});\r\n    }\r\n\r\n    generateView() {\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n\r\n                    <div>\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n                    Times clicked: {this.state.timesClicked}\r\n                    <div className=\"buttons\">\r\n                        <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                        <button className=\"NextButton Green\" onClick={()=> alert('hi')}>Recommendations</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n            if (this.state.view === 0) {\r\n                return (\r\n                    <div>\r\n\r\n                        <div>\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\"><b>Recommend</b></button></Link>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n            else {\r\n                if (this.state.swipednumber < 6) {\r\n                    return (\r\n                        <div className=\"Span\">\r\n                            <div style={wrapperStyles}>\r\n\r\n                                {this.state.foods.length > 0 ? (\r\n                                    <div style={wrapperStyles}>\r\n\r\n                                        <Swipeable\r\n                                            buttons={({left, right}) => (\r\n                                                <div style={actionsStyles}>\r\n                                                    <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                    <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                                </div>\r\n                                            )}\r\n                                            onAfterSwipe={this.remove}\r\n                                            onSwipe={this.swipeItem}\r\n                                        >\r\n\r\n                                            <div className=\"FoodCard fadeInLeft0\">\r\n                                                <div className=\"FoodHeader\">\r\n                                                    <b>{this.getname(this.state.swipednumber)}</b>\r\n                                                </div>\r\n                                                {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n\r\n                                                {this.generateBadges(this.state.swipednumber)}\r\n                                                <div>\r\n                                                    {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                    {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </Swipeable>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <div >\r\n                                        <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                        <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                        <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n\r\n                    )\r\n                }\r\n                else{\r\n                    return(\r\n                        <div >\r\n                            <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                            <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                            <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                        </div>\r\n                    )\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n        let html = [];\r\n\r\n\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n\r\n            let badges = [];\r\n            currentfavorite[\"tags\"].forEach(function (item, index) {\r\n\r\n                let badgeName = \"FoodBadge \" + item;\r\n                if (item === \"15-minutes-or-less\") {\r\n                    badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                }\r\n                badges.push(<button className={badgeName}> </button>);\r\n\r\n            });\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            html.push(<div>\r\n                <button className={className} onClick={() => this.getInfo(currentfavorite[\"name\"])}  >\r\n\r\n                    <img className=\"FoodPhoto\" align=\"left\" src={currentfavorite[\"image\"]} alt=\"Food\"/>\r\n\r\n                    <b className=\"FoodTitle\">{currentfavorite[\"name\"]}</b> <br/>\r\n                    {badges}\r\n\r\n                    {this.recipePopup(currentfavorite[\"name\"],currentfavorite[\"image\"])}\r\n                    {this.nutritionalPopup(currentfavorite[\"name\"])}\r\n                </button>\r\n            </div>)\r\n\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n                assets[food].forEach(function (item, i) {\r\n                    let badgeName = \"FoodBadge \" + item;\r\n                    if (item === \"15-minutes-or-less\") {\r\n                        badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                    }\r\n                    badges.push(<button className={badgeName}> </button>);\r\n\r\n                });\r\n            }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n\r\n\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>1){\r\n                if (assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<button className={badgeName}> </button>);\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} } onClick={() => this.getInfo(foods[i])}  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => this.logAction(\"get recipe\",name)}>\r\n                                    {this.recipePopup(foods[i],this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => this.logAction(\"get nutritional values\",name)}>\r\n                                    {this.nutritionalPopup(foods[i])}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n\r\n    }\r\n\r\n    like(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n\r\n                let t=0;\r\n\r\n                for(let j=0;j<foods.length;j++){\r\n                    let f1 = foods[j].toLowerCase();\r\n\r\n                    if(f1===f2){\r\n                        t=j;\r\n                    }\r\n                }\r\n                if(liked==null){\r\n                    liked=[];\r\n                }\r\n                foods.splice(t,1);\r\n                this.state.foods=foods;\r\n                tags.splice(t,1);\r\n                this.state.tags=tags;\r\n                images.splice(t,1);\r\n                this.state.images=images;\r\n\r\n                liked.push(name);\r\n\r\n                this.state.likedItems = liked;\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n                break;\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    dislike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    let f1 = foods[j].toLowerCase();\r\n                    if (f1 === f2) {\r\n                        t = j;\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.state.foods = foods;\r\n                tags.splice(t, 1);\r\n                this.state.tags = tags;\r\n                images.splice(t, 1);\r\n                this.state.images = images;\r\n\r\n\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n\r\n                disliked.push(name);\r\n\r\n\r\n                this.state.dislikedItems = disliked;\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", name);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"view\")) === 1){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"swipe mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    endSwipe(){\r\n        this.state.swiping=false;\r\n        this.state.shadownr=0;\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n    swiped(eventData,name) {\r\n        this.state.swiping=true;\r\n        this.state.shadownr=eventData.deltaX;\r\n\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let transit=this.state.transparency;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n\r\n    }\r\n\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    //RENDER\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <header className=\"App-header\">\r\n                    <div className=\"PageHeader\"> <b className=\"PageTitle\">Let's get to know you!</b>\r\n                        <Link to=\"/profile\"><button className=\"profile\" ><b> </b></button></Link>\r\n                        <Link to=\"/recommendations\"><button onClick={() => {localStorage.setItem(\"favorite\", JSON.stringify(true));}} title=\"favorites\" className=\"favorites\" ><b> </b></button></Link>\r\n                        <Link to=\"/recommendations\"><button onClick={() => localStorage.setItem(\"favorite\", JSON.stringify(false))} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n                        <div className=\"sliderBox\" >\r\n                            <label className=\"switch\">\r\n                                <input type=\"checkbox\"></input>\r\n                                <span className=\"slider round\" onClick={this.switchViews}></span>\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    {this.generateView()}\r\n                </header>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GettingToKnow;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport ReactSwing from \"react-swing\";\r\n\r\nclass SwipeTest extends Component {\r\n    stackEl = React.createRef();\r\n\r\n    constructor(props, context) {\r\n        super(props, context);\r\n\r\n        // An instance of the Stack\r\n        this.state = {\r\n            stack: null,\r\n            foods: [\"Turkey\", \"Ham\", \"Pineapple\", \"Test\", 'Seeds']\r\n        };\r\n\r\n        this.createCards = this.createCards.bind(this);\r\n    }\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card clubs\" ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{this.state.foods[i]}</b></div>\r\n\r\n            </div>)\r\n        }\r\n        return html\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"viewport\">\r\n                    <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                    <div className=\"likeStack\"><b>Like</b></div>\r\n                    {/*ReactSwing Element*/}\r\n                    <ReactSwing\r\n                        className=\"stack\"\r\n                        tagName=\"div\"\r\n                        setStack={stack => this.setState({ stack })}\r\n                        ref={this.stackEl}\r\n                    >\r\n                        {/*children elements is will be Card*/}\r\n                        {this.createCards()}\r\n                    </ReactSwing>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SwipeTest;","import React from 'react';\r\nimport './FoodPage.css';\r\nimport './Popup.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Popup from \"reactjs-popup\";\r\nimport Swipeable from \"react-swipy\";\r\nimport {Swipeable as Swiping} from \"react-swipeable\";\r\nimport './tinderCards.css';\r\nimport Swal, {clickConfirm} from \"sweetalert2\";\r\nimport styled from \"styled-components\";\r\nimport {  Popup as InfoPopup } from \"semantic-ui-react\";\r\nimport ReactSwing from \"react-swing\";\r\nlet lastItem = null;\r\nlet lastAction  = null;\r\nexport const icanswipe = styled.div`\r\n  display: flex;\r\n  transition: ${props => (props.sliding ? \"none\" : \"transform 1s ease\")};\r\n  transform: ${props => {\r\n    if (!props.sliding) return \"translateX(calc(-80% - 20px))\";\r\n    if (props.dir === \"PREV\") return \"translateX(calc(2 * (-80% - 20px)))\";\r\n    return \"translateX(0%)\";\r\n}};\r\n`;\r\n\r\nconst wrapperStyles = {position: \"relative\", width: \"250px\", height: \"300px\"};\r\nconst actionsStyles = {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 12,\r\n};\r\n\r\nfunction capitalizeFLetter(string) {\r\n    let returnVal = string;\r\n    try {\r\n        returnVal = string[0].toUpperCase() + string.slice(1);\r\n    } catch (e) {\r\n\r\n    }\r\n    return returnVal;\r\n}\r\n\r\nfunction perc2color(perc) {\r\n    var r, g, b = 0;\r\n    if(perc < 50) {\r\n        r = 255;\r\n        g = Math.round(5.1 * perc);\r\n    }\r\n    else {\r\n        g = 255;\r\n        r = Math.round(510 - 5.10 * perc);\r\n    }\r\n    var h = r * 0x10000 + g * 0x100 + b * 0x1;\r\n    return '#' + ('000000' + h.toString(16)).slice(-6);\r\n}\r\n\r\nfunction shuffle(array,array2,array3) {\r\n    var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n    // While there remain elements to shuffle...\r\n    while (0 !== currentIndex) {\r\n\r\n        // Pick a remaining element...\r\n        randomIndex = Math.floor(Math.random() * currentIndex);\r\n        currentIndex -= 1;\r\n\r\n        // And swap it with the current element.\r\n        temporaryValue = array[currentIndex];\r\n        array[currentIndex] = array[randomIndex];\r\n        array[randomIndex] = temporaryValue;\r\n        temporaryValue = array2[currentIndex];\r\n        array2[currentIndex] = array2[randomIndex];\r\n        array2[randomIndex] = temporaryValue;\r\n        temporaryValue = array3[currentIndex];\r\n        array3[currentIndex] = array3[randomIndex];\r\n        array3[randomIndex] = temporaryValue;\r\n    }\r\n    let answer=[];\r\n    answer.push(array,array2,array3);\r\n\r\n    return answer;\r\n}\r\nconst sleep = (milliseconds) => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\r\n}\r\n\r\nclass RecommendationsA extends React.Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.state = {\r\n            foods: [],\r\n            tags: [],\r\n            images: [],\r\n            recipe: [],\r\n            nutrition: [],\r\n            ingredients: [],\r\n            similar: [],\r\n\r\n\r\n        };\r\n\r\n\r\n\r\n        this.socket=this.initialiseSocket();\r\n        this.sendable=false;\r\n\r\n        this.generateMeal=this.generateMeal.bind(this);\r\n        this.getRecommendations=this.getRecommendations.bind(this);\r\n        this.switchViews=this.switchViews.bind(this);\r\n        this.generateView=this.generateView.bind(this);\r\n        this.resetSwipes=this.resetSwipes.bind(this);\r\n        this.generateFavorites=this.generateFavorites.bind(this);\r\n        this.goToFavorites=this.goToFavorites.bind(this);\r\n        this.goToRecommends=this.goToRecommends.bind(this);\r\n        this.generateBadges=this.generateBadges.bind(this);\r\n        this.swipeItem = this.swipeItem.bind(this);\r\n        this.saveAlert = this.saveAlert.bind(this);\r\n        this.createCards = this.createCards.bind(this);\r\n\r\n\r\n        this.socket.onopen = () => {\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            let payload= {\r\n                action: \"initialise\"\r\n            };\r\n            for (let i = users.length-1; i>=0; i--) {\r\n                if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                               users[i].FirstTime1 = false;\r\n                               localStorage.setItem(\"users\", JSON.stringify(users));\r\n\r\n                    let liked=users[i].Liked;\r\n                    payload={\r\n                        action: \"initialise\",\r\n                        favorites:liked,\r\n                        name: localStorage.getItem('currentUser')\r\n                    };\r\n                }\r\n            }\r\n            this.socket.send(JSON.stringify(payload));\r\n            if (!this.sendable){\r\n                this.loading=false;\r\n                this.sendable=true;\r\n                if(this.state.favorite){\r\n                    this.goToFavorites()\r\n                }\r\n                else{\r\n                    this.getRecommendations();\r\n                }\r\n            }\r\n            // do something after connection is opened\r\n        };\r\n\r\n        this.state.favorite=JSON.parse(localStorage.getItem('favorite'));\r\n\r\n        this.socket.onmessage=((message) => {\r\n            let translation=JSON.parse(message.data);\r\n            console.log(translation);\r\n            switch(translation.action){\r\n                case \"Recommends\":\r\n                    if(this.loading){\r\n                        this.loading=false;\r\n                        // alert(\"this\");\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    Swal.fire({\r\n                        title: 'Great!',\r\n                        text: \"Now let's choose some meals you like or dislike, so we can get a small glimpse into your preferences.\",\r\n                        icon: 'success',\r\n                        confirmButtonText: 'Okay!'\r\n                    }).then(() => {\r\n                        if (clickConfirm) {\r\n                            Swal.fire({\r\n                                text: \" Drag an item left to dislike it, or right to like it.\",\r\n                                icon: 'info',\r\n                                confirmButtonText: 'Okay!'\r\n                            }).then(() => {\r\n                                if (clickConfirm) {\r\n                                    Swal.fire({\r\n                                        text: \" If you're ready, press the button down bellow for some personalized recommendations!\",\r\n                                        icon: 'info',\r\n                                        confirmButtonText: 'Okay!'\r\n                                    });\r\n                                }\r\n                            })\r\n                        }});\r\n\r\n\r\n                    let initialfoods = translation.recommends;\r\n                    let initialtags = translation.tags;\r\n                    let initialimages = translation.images;\r\n                    let shuffled=this.filterfoods(initialfoods,initialtags,initialimages);\r\n                    let filteredfoods=shuffled[0];\r\n                    let filteredTags=shuffled[1];\r\n                    let filteredImages=shuffled[2];\r\n                    this.setState({tags: filteredTags});\r\n                    this.setState({foods: filteredfoods});\r\n                    this.setState({images: filteredImages});\r\n                    if(JSON.parse(localStorage.getItem('viewInit'))==1 && this.state.initialised!=true){\r\n                        this.state.view=0;\r\n                        sleep(5).then(() => {\r\n                            this.state.view= JSON.parse(localStorage.getItem('viewInit'));\r\n                            if(this.state.view==1){\r\n                                this.state.swipednumber=0;\r\n                                const value = (this.state.view + 1) % 2;\r\n                                localStorage.setItem(\"view\", value);\r\n                                this.state.initialised=true;\r\n                                this.setState({view: 1});\r\n                            }\r\n                        })\r\n\r\n\r\n                    }\r\n                    break;\r\n                case \"favorites\":\r\n\r\n                    if(this.loading){\r\n                        // alert(\"this favorites\");\r\n                        this.loading=false;\r\n                        Swal.fire({\r\n                            title: \"Finished!\",\r\n                            showConfirmButton: false,\r\n                            timer: 1000\r\n                        });\r\n                    }\r\n                    this.setState({favorites: translation.favorites});\r\n                    //  alert('favorites set '+ translation.favorites);\r\n                    break;\r\n                case \"Similar\":\r\n\r\n                    // alert(\"this favorites\");\r\n                    this.loading=false;\r\n                    Swal.fire({\r\n                        title: \"Finished!\",\r\n                        showConfirmButton: false,\r\n                        timer: 1000\r\n                    });\r\n\r\n                    this.setState({similar: translation.similar});\r\n                    break;\r\n                case \"Recipe\":\r\n                    this.setState({recipe: translation.recipe});\r\n                    break;\r\n                case \"Nutrition\":\r\n                    this.setState({nutrition: translation.nutrition});\r\n                    break;\r\n                case \"Ingredients\":\r\n                    this.setState({ingredients: translation.ingredients});\r\n                    break\r\n            }\r\n        });\r\n        if(this.state.swipednumber===undefined){\r\n            this.state.swipednumber=0;\r\n        }\r\n\r\n        if(this.state.favorite){\r\n            this.goToFavorites()\r\n        }\r\n        if(this.state.initialised==undefined||this.state.initialised==false){\r\n            this.state.view=0;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    filterfoods(initialfoods,initialtags,initialimages){\r\n        let shuffled=shuffle(initialfoods,initialtags,initialimages);\r\n        let newinitialfoods=shuffled[0];\r\n        let newinitialtags=shuffled[1];\r\n        let newinitialimages=shuffled[2];\r\n\r\n        //initialfoods shuffle\r\n\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let filteredFoods  =[];\r\n        let filteredtags  =[];\r\n        let filteredimages  =[];\r\n        let p=0;\r\n        for (let i = 0; p<7 ; i++) {\r\n            if (newinitialfoods[i] !==\"\" && !likedItems.includes(newinitialfoods[i]) && !dislikedItems.includes(newinitialfoods[i])) {\r\n                p++;\r\n                filteredFoods.push(newinitialfoods[i]);\r\n                filteredtags.push(newinitialtags[i]);\r\n                filteredimages.push((newinitialimages[i]));\r\n                //alert(initialfoods[i]);\r\n            }\r\n        }\r\n        let answer=[];\r\n        answer.push(filteredFoods,filteredtags,filteredimages);\r\n        return answer;\r\n    }\r\n\r\n    initialiseSocket() {\r\n        if(this.socket!==undefined){\r\n            return this.socket;\r\n        }\r\n        this.setState({favorite: false});\r\n        return new WebSocket(\"ws://localhost:9000\");\r\n    }\r\n\r\n    getInfo(string) {\r\n\r\n\r\n        this.sendRecipe(string);\r\n        this.sendNuttritionSimilar(string);\r\n    }\r\n    sendRecipe(name) {\r\n        name=name.toLowerCase();\r\n        console.log(\"send recipe\");\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Recipe\",\r\n            recipe: name\r\n        };\r\n        let ingredipayload = {\r\n            action: \"Ingredients\",\r\n            name: name\r\n        };\r\n        //  this.socket.close();\r\n        if(this.sendable!==undefined&&this.sendable){\r\n            this.socket.send(JSON.stringify(payload));\r\n            this.socket.send(JSON.stringify(ingredipayload));\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n    sendNuttritionSimilar(name) {\r\n        name=name.toLowerCase();\r\n        this.socket=this.initialiseSocket();\r\n        let payload = {\r\n            action: \"Nutrition\",\r\n            name: name\r\n        };\r\n        if(this.sendable!==undefined&&this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n\r\n        }\r\n        let similarpayload={\r\n            action: \"Similar\",\r\n            recipe: name,\r\n            prolist:[]\r\n        };\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let prolist = [];\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            if(likedItems[i]!=name){\r\n                let item = {};\r\n                item['name'] = likedItems[i];\r\n                item['rating']= 1.0;\r\n                prolist.push(item);\r\n            }\r\n\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n        similarpayload.prolist = prolist;\r\n        this.state.proto=!this.state.proto;\r\n        if(this.sendable) {\r\n            if(this.state.proto){\r\n                this.socket.send(JSON.stringify(similarpayload));\r\n                Swal.fire({\r\n                    title: \"Loading...\",\r\n                    text: \"Please wait\",\r\n                    showConfirmButton: false,\r\n                    allowOutsideClick: false,\r\n                });\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getFavorites(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let likedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                likedItems = users[i].Liked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n\r\n        let payload = {\r\n            action: \"Favorites\",\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n\r\n        const names = [\"vegetarian\", \"gluten-free\", \"low-carb\", \"vegan\", \"dairy-free\",\"low-cholesterol\",\"kosher\",\"ramadan\", \"low-protein\"];\r\n        const likes = JSON.parse(localStorage.getItem('boxes'));\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n\r\n        console.log(payload);\r\n\r\n        if(this.sendable) {\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    getRecommendations(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempUserIndex = -1;\r\n        let likedItems = null;\r\n        let dislikedItems = null;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempUserIndex = i;\r\n                likedItems = users[i].Liked;\r\n                dislikedItems = users[i].Disliked;\r\n            }\r\n        }\r\n        if(likedItems==null){\r\n            likedItems=[];\r\n        }\r\n        if(dislikedItems==null){\r\n            dislikedItems=[];\r\n        }\r\n        let payload = {\r\n            action: \"Recommend\",\r\n            account: {vegan: 1, easy: 1, preparation: 1},\r\n            amount: 7,\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        };\r\n        let amount=7;\r\n\r\n        if(likedItems!=null && likedItems!==undefined){\r\n            amount+=likedItems.length;\r\n        }\r\n        if(dislikedItems!=null &&dislikedItems!==undefined){\r\n            amount+=dislikedItems.length;\r\n        }\r\n\r\n        payload.amount=amount;\r\n        let names = users[tempUserIndex].Preferences;\r\n        let likes = users[tempUserIndex].booleansPreferences;\r\n        for (let k = 0; k<names.length; k++){\r\n            names[k] = names[k].toLowerCase();\r\n        }\r\n\r\n        let account = {};\r\n        // Creating account\r\n        for (let i = 0; i < names.length; i++) {\r\n            if (likes[i] === true) {\r\n                account[names[i]] = 1;\r\n            }\r\n        }\r\n        console.log(account);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        // Creating prolist\r\n        let prolist = [];\r\n\r\n        for (let i = 0; i < likedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = likedItems[i];\r\n            item['rating'] = 1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        for (let i = 0; i < dislikedItems.length; i++) {\r\n            let item = {};\r\n            item['name'] = dislikedItems[i];\r\n            item['rating'] = -1.0;\r\n            prolist.push(item)\r\n        }\r\n\r\n        payload.prolist = prolist;\r\n        console.log(prolist);\r\n        payload.account = account;\r\n        console.log(payload);\r\n\r\n        console.log(payload)\r\n        if(this.sendable) {\r\n\r\n            this.socket.send(JSON.stringify(payload));\r\n            Swal.fire({\r\n                title: \"Loading...\",\r\n                text: \"Please wait\",\r\n                showConfirmButton: false,\r\n                allowOutsideClick: false,\r\n            });\r\n            this.state.initialised=false;\r\n            this.loading=true;\r\n        }\r\n    }\r\n\r\n    //POPUP CODE\r\n    nutritionalPopup(name){\r\n\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n        if(nutritionalInfo!==undefined){\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n        let html = [\r\n            <Popup  modal trigger={<button title=\"nutrition\" className=\"IconLayout NutritionIcon\" >\r\n            </button>} >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Nutritional info for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {nutritionalInfoHtml}\r\n                </div>\r\n            </Popup>];\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopup(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge\" align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n        html.push(\r\n            <Popup className=\"poptry\" modal trigger={<button  title= \"recipe\" className=\"IconLayout RecipeIcon\" onClick={() => this.sendRecipe(name)}>\r\n            </button>} position=\"right center\" >\r\n                <div className=\"popUp2\">\r\n                    <div className=\"popupHeader\">Recipe for\r\n                        <br/>\r\n                        {title}</div>\r\n                    <br/>\r\n                    {popUpHtml}\r\n                </div>\r\n            </Popup>);\r\n        return html;\r\n    }\r\n\r\n    recipePopupForTinder(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined){\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"RecipeButton\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({opened: name});this.logAction(\"get recipe\",name)}} src={image} >\r\n                </button>\r\n                <Popup  open={this.state.opened==name} onClick={() => this.setState({opened: \"none\"})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => {this.setState({opened: \"none\"});this.logAction(\"get recipe\",name) }}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({opened: \"none\"})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    recipePopupFromImage(name,image){\r\n        //Recipe list\r\n        let recept = this.getRecipe();\r\n        let recipeHtmlTemp = [];\r\n        let ingredients = this.getIngredients();\r\n        let popUpHtml = [];\r\n        let ingredientsHtmlTemp = [];\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(ingredients!==undefined){\r\n            for (let i = 0; i < ingredients.length; i++){\r\n                ingredientsHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n                        {ingredients[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n        if(recept!==undefined) {\r\n            for (let i = 0; i < recept.length; i++){\r\n                recipeHtmlTemp.push(\r\n                    <div className = \"popupRecipeText\">\r\n                        {i + 1}. {recept[i]}\r\n                        <br/>\r\n                    </div>)\r\n            }\r\n        }\r\n\r\n        //, width: \"30%\" vs 70%\r\n        //add an extra element to the column that includes the image\r\n\r\n        popUpHtml.push(\r\n            <div className=\"row:after\">\r\n                <div className=\"column\">\r\n                    <div className=\"rowingredi\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Ingredients:\r\n                            <br/>\r\n                        </div>\r\n                        {ingredientsHtmlTemp}\r\n                    </div>\r\n                    <div className=\"row2\">\r\n\r\n                        <img className=\"FoodPhotoLarge3\" onClick={() => this.setState({open: false})} align=\"left\" src={image} alt=\"Food\"/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"column2\">\r\n                    <div className=\"reciperow\">\r\n                        <div className=\"popupTextTitleRecipe\">\r\n                            Steps:\r\n                            <br/>\r\n                        </div>\r\n                        {recipeHtmlTemp}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n\r\n        let html = [];\r\n\r\n        html.push(\r\n            <div>\r\n                <img className=\"FoodPhotoTinder\" title=\"recipe\" align=\"left\" onClick={() => {this.sendRecipe(name); this.setState({open: true});}} src={image} >\r\n                </img>\r\n                <Popup  open={false} onClick={() => this.setState({open: false})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n                    <div className=\"popUp3\" onClick={() => this.setState({open: false})}>\r\n                        <div className=\"popupHeader\" onClick={() => this.setState({open: false})}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n                        {popUpHtml}\r\n                    </div>\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    nutritionalPopupForTinder(name,image){\r\n        //Recipe list\r\n        let nutritionLabels = ['Carbs','Total Fats', 'Sugar', 'Sodium', 'Protein', 'Saturated Fats', 'Carbohydrates'];\r\n        let nutritionalInfo = this.getNutritionInfo(name);\r\n        let nutritionalInfoHtml = [];\r\n        let nutritionalInfoHtmlTemp = [];\r\n        let nutritionalInfoHtmlTemp2 = [];\r\n        let explanationHtmlTemp = [];\r\n        let similarMeals = this.getExplanation();\r\n        let title=capitalizeFLetter(name);\r\n\r\n        if(nutritionalInfo!==undefined){\r\n\r\n            for (let i = 0; i < nutritionalInfo.length; i++){\r\n\r\n                nutritionalInfoHtmlTemp.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionLabels[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n                nutritionalInfoHtmlTemp2.push(\r\n                    <div className = \"popupText\">\r\n\r\n                        {nutritionalInfo[i]}\r\n                        <br/>\r\n\r\n                    </div>);\r\n            }\r\n        }\r\n        let empty = true;\r\n        if(similarMeals!==undefined){\r\n\r\n            for (let i = 0; i < similarMeals.length; i++) {\r\n                let number=Math.floor(similarMeals[i][\"matchfactor\"]*100);\r\n                let color=perc2color(number);\r\n                if (number >= 60){\r\n                    empty= false;\r\n                    explanationHtmlTemp.push(\r\n                        <div className=\"popupText2\">\r\n                            <div className=\"container2\">\r\n                                <img className=\"FoodPhotoLarge3\" onClick={this.goToFavorites} title={similarMeals[i][\"name\"]} align=\"left\" src={similarMeals[i][\"image\"]} alt=\"Food\"/>\r\n                                <button className=\"OnTopButton\" style={{backgroundColor: color}}>{number}%</button>\r\n                            </div>\r\n\r\n                            <br/>\r\n\r\n                        </div>);\r\n                }\r\n            }\r\n\r\n        }\r\n        if (empty){\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            You did not try anything like this! Try it out!\r\n                            <br/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            );\r\n        }\r\n        else{\r\n            nutritionalInfoHtml.push(\r\n                <div className=\"row\">\r\n                    <div className=\"Nutritioncolumn\">\r\n                        <div className=\"popupTextTitle\">\r\n                            Nutritional info:\r\n                            <br/>\r\n                        </div>\r\n                        <div className=\"textrow\">\r\n                            <div className=\"textcolumn1\">{nutritionalInfoHtmlTemp}</div>\r\n                            <div className=\"textcolumn2\">{nutritionalInfoHtmlTemp2}</div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"column\">\r\n                        <div className=\"popupTextTitle2\">\r\n                            Because you liked:\r\n                            <br/>\r\n                        </div>\r\n                        {explanationHtmlTemp}\r\n                    </div>\r\n                </div>\r\n\r\n            );}\r\n\r\n        let html = [];\r\n\r\n\r\n        html.push(\r\n            <div>\r\n                <button  title= \"recipe\" className=\"NutritionButton\" title=\"Nutrition\" align=\"left\" onClick={() => {this.sendNuttritionSimilar(name); this.setState({nutritionopened: name});this.logAction(\"get nutritional values\",name)}} src={image} >\r\n\r\n                </button>\r\n                <Popup  open={this.state.nutritionopened==name} onClick={() => this.setState({nutritionopened: 'none'})} closeOnDocumentClick\r\n                        position=\"right center\" >\r\n\r\n                    <div className=\"popUp3\" onClick={() => this.setState({nutritionopened: \"none\"})}>\r\n\r\n                        <div className=\"popupHeader\" onClick={() => {this.setState({nutritionopened: \"none\"});this.logAction(\"get nutritional values\",name)}}>Recipe for\r\n                            <br/>\r\n                            {title}</div>\r\n                        <br/>\r\n\r\n                        {nutritionalInfoHtml}\r\n                    </div>\r\n\r\n\r\n\r\n                </Popup>\r\n            </div>\r\n        );\r\n\r\n        return html;\r\n    }\r\n\r\n    //GET DATA\r\n    getIngredients(gerecht){\r\n        //TODO implementeren\r\n        return this.state.ingredients;\r\n    }\r\n    getRecipe(gerecht){\r\n        //TODO implementeren\r\n        return this.state.recipe;\r\n\r\n    }\r\n    getNutritionInfo(gerecht){\r\n        //TODO implementeren\r\n        //volgorde:\r\n        // Calories in g\r\n        // Total fat in %\r\n        // Suiker in %\r\n        // Sodium in %\r\n        // Protein in %\r\n        // Saturated Fat in %\r\n        // Total Carbohydrate in %\r\n        return this.state.nutrition\r\n\r\n\r\n    }\r\n    getExplanation(){\r\n        return this.state.similar;\r\n    }\r\n\r\n\r\n    getAssets(){\r\n        return this.state.tags;\r\n    }\r\n\r\n    saveAlert() {\r\n        Swal.fire({\r\n            title: 'Saved!',\r\n            text: \"Your liked and disliked meals are saved.\",\r\n            icon: 'success',\r\n            confirmButtonText: 'Great!'\r\n        });\r\n        this.getRecommendations();\r\n    }\r\n\r\n\r\n\r\n    swipeItem(action) {\r\n        let thisCard = this.state.foods[this.state.swipednumber];\r\n        if (action === 'left') {\r\n            this.dislike(thisCard);\r\n        }\r\n        else if (action === 'right') {\r\n            this.like(thisCard);\r\n        }\r\n    }\r\n\r\n    resetSwipes(){\r\n        this.state.swipednumber=0;\r\n        this.getRecommendations();\r\n        this.setState({view: 1});\r\n        this.setState({favorite: false});\r\n        localStorage.setItem(\"view\", 1);\r\n    }\r\n\r\n    switchViews() {\r\n        this.state.swipednumber=0;\r\n        let  value = (this.state.view + 1) % 2;\r\n        localStorage.setItem(\"viewInit\", value);\r\n        this.setState({view: value});\r\n        this.setState({favorite: false});\r\n\r\n        localStorage.setItem(\"view\", value);\r\n    }\r\n\r\n\r\n    goToFavorites(){\r\n        this.getFavorites();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(true));\r\n        this.setState({favorite: true});\r\n\r\n    }\r\n    goToRecommends(){\r\n        this.getRecommendations();\r\n        localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n        this.setState({favorite: false});\r\n\r\n    }\r\n\r\n    /*\r\n        generateView() {\r\n            if(this.state.favorite){\r\n                return(\r\n                    <div>\r\n                        <div className=\"Listing\">\r\n                            favoritestate\r\n                            {this.generateFavorites()}\r\n                        </div>\r\n                        Times clicked: {this.state.timesClicked}\r\n                        <div className=\"buttons\">\r\n                            <Link to=\"/\"><button className=\"NextButton Green\"><b>SAVE</b></button></Link>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n            else{\r\n                if (this.state.view === 0) {\r\n                    return (\r\n                        <div>\r\n\r\n                            <div className=\"Listing\">\r\n                                {this.generateMeal()}\r\n                            </div>\r\n                            Times clicked: {this.state.timesClicked}\r\n                            <div className=\"buttons\">\r\n                                <button className=\"NextButton Green\" onClick={this.saveAlert}><b>SAVE</b></button>\r\n                            </div>\r\n                        </div>)\r\n                }\r\n                else {\r\n                    if (this.state.swipednumber < 6) {\r\n                        return (\r\n                            <div className=\"Span\">\r\n                            <div style={wrapperStyles}>\r\n\r\n                                {this.state.foods.length > 0 ? (\r\n                                    <div style={wrapperStyles}>\r\n\r\n                                        <Swipeable\r\n                                            buttons={({left, right}) => (\r\n                                                <div style={actionsStyles}>\r\n                                                    <button className=\"tinderButton dislike fadeInLeft1\" onClick={left}><b>Reject</b></button>\r\n                                                    <button className=\"tinderButton like fadeInLeft1\" onClick={right}><b>Accept</b></button>\r\n                                                </div>\r\n                                            )}\r\n                                            onAfterSwipe={this.remove}\r\n                                            onSwipe={this.swipeItem}\r\n                                        >\r\n\r\n                                            <div className=\"FoodCard fadeInLeft0\">\r\n                                                <div className=\"FoodHeader\">\r\n                                                    <b>{capitalizeFLetter(this.getname(this.state.swipednumber))}</b>\r\n                                                </div>\r\n                                                <div className=\"table\">\r\n\r\n                                                        <div className=\"tablerow1\">\r\n                                                            {this.recipePopupFromImage(this.getname(this.state.swipednumber),this.getimage(this.state.swipednumber))}\r\n                                                        </div>\r\n                                                        <div className=\"tablerow2\">\r\n                                                            {this.generateBadges(this.state.swipednumber)}\r\n                                                        </div>\r\n                                                        <div className=\"tablerow3\">\r\n                                                            {this.recipePopupForTinder(this.state.foods[this.state.swipednumber],this.getimage(this.state.swipednumber))}\r\n                                                            {this.nutritionalPopupForTinder(this.state.foods[this.state.swipednumber])}\r\n                                                        </div>\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </Swipeable>\r\n\r\n                                    </div>\r\n                                ) : (\r\n                                    <div >\r\n                                        <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                        <button className=\"NextButton Green\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                        <button className=\"NextButton Green\"  onClick={this.resetSwipes}>New Cards</button>\r\n                                    </div>\r\n                                )}\r\n                            </div>\r\n                            </div>\r\n\r\n                        )\r\n                    }\r\n                    else{\r\n                        return(\r\n                            <div >\r\n                                <div className=\"FoodItem\" zIndex={-2}>No more cards</div>\r\n                                <button className=\"NextButton\"  onClick={() => this.setState({view: 0}) }>Recommendations</button>\r\n                                <button className=\"NextButton\"  onClick={this.resetSwipes}>New Cards</button>\r\n                            </div>\r\n                        )\r\n                    }\r\n                }\r\n\r\n            }\r\n        } */\r\n\r\n    createCards() {\r\n        let html = [];\r\n        for (let i = 0; i < this.state.foods.length; i++) {\r\n            const refName = \"card\"+ i;\r\n            html.push(<div className=\"card\"  ref={refName}>\r\n                <div className=\"FoodHeader\"><b>{capitalizeFLetter(this.state.foods[i])}</b></div>\r\n                {this.recipePopupFromImage(this.getname(i),this.getimage(i))}\r\n                {this.generateBadges(i)}\r\n                <div className=\"tablerow3\">\r\n                    {this.recipePopupForTinder(this.state.foods[i],this.getimage(i))}\r\n                    {this.nutritionalPopupForTinder(this.state.foods[i])}\r\n                </div>\r\n            </div>)\r\n\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateView() {\r\n\r\n\r\n        if(this.state.favorite){\r\n            return(\r\n                <div>\r\n                    <div className=\"Listing\">\r\n                        favoritestate\r\n                        {this.generateFavorites()}\r\n                    </div>\r\n\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            if (this.state.view === 0) {\r\n\r\n                return (\r\n                    <div>\r\n\r\n                        <div className=\"Listing\">\r\n                            {this.generateMeal()}\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\"><b>Recommend!</b></button></Link>\r\n                        </div>\r\n                    </div>)\r\n            }\r\n\r\n\r\n            else {\r\n\r\n                return (\r\n                    <div>\r\n                        <div id=\"viewport\">\r\n                            <div className=\"dislikeStack\"><b>Dislike</b></div>\r\n                            <div className=\"likeStack\"><b>Like</b></div>\r\n                            <ReactSwing\r\n                                className=\"stack\"\r\n                                tagName=\"div\"\r\n                                setStack={stack => this.setState({ stack })}\r\n                                ref={this.stackEl}\r\n                                throwoutleft={()=>this.dislike(\"\")}\r\n                                throwoutright={()=>this.like(\"\")}\r\n                            >\r\n                                {this.createCards()}\r\n                            </ReactSwing>\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <br/>\r\n                            <Link to=\"/recommendations\"><button className=\"NextButton Green\" ><b>Recommend!</b></button></Link>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    }\r\n\r\n    generateFavorites() {\r\n        let favorites = this.state.favorites;\r\n        if(favorites==null||favorites==undefined){\r\n            return;\r\n        }\r\n        // alert(JSON.stringify(favorites));\r\n        let html = [];\r\n        for (let i = 0; i < favorites.length; i++) {\r\n            let currentfavorite=favorites[i];\r\n            let name =currentfavorite[\"name\"];\r\n            let image=currentfavorite[\"image\"];\r\n            let badges = [];\r\n\r\n            if(currentfavorite[\"tags\"]==undefined){\r\n\r\n            }\r\n            else{\r\n                if(currentfavorite[\"tags\"].length<=1){\r\n                    badges.push(<button className={\"FoodBadge \"+currentfavorite[\"tags\"]}> </button> )\r\n                }\r\n                else{\r\n                    currentfavorite[\"tags\"].forEach(function (item, index) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<button className={badgeName}> </button>);\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedLeft:()=>this.unlike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined) {\r\n                if (this.state.showThumbs == name || this.state.translation[name] != undefined) {\r\n                    if (Math.abs(this.state.shadownr) > 10) {\r\n                        if (this.state.shadownr > 0) {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimagewithshadow2\"/>\r\n                                </div>\r\n                            );\r\n                        } else {\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"dislikedimage2\"/>\r\n                                </div>\r\n                            );\r\n                        }\r\n                    } else {\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"dislikedimage2\"/>\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} }  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={image} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(name,this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}}>\r\n                                    {this.nutritionalPopup(name)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>);\r\n        }\r\n        return html\r\n    }\r\n\r\n    generateBadges(food) {\r\n        let badges = [];\r\n        let assets = this.getAssets();\r\n\r\n        if(assets!=undefined && assets.length>0){\r\n            if(assets[food]!=undefined){\r\n                assets[food].forEach(function (item, i) {\r\n                    let badgeName = \"FoodBadge \" + item;\r\n                    if (item === \"15-minutes-or-less\") {\r\n                        badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                    }\r\n                    badges.push(<InfoPopup  position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n\r\n                });\r\n            }}\r\n        return badges;\r\n    }\r\n\r\n    //GENERATE MEAL\r\n    generateMeal() {\r\n        if (this.state.foods === undefined) {\r\n            return\r\n        }\r\n        let foods = this.state.foods;\r\n        let assets = this.getAssets();\r\n        let html = [];\r\n\r\n        for (let i = 0; i < foods.length; i++) {\r\n            let name=capitalizeFLetter(foods[i]);\r\n            let badges = [];\r\n\r\n            if(assets!=undefined && assets.length>0){\r\n                if(assets[i]!=undefined){\r\n                    assets[i].forEach(function (item, i) {\r\n                        let badgeName = \"FoodBadge \" + item;\r\n                        if (item === \"15-minutes-or-less\") {\r\n                            badgeName = \"FoodBadge fifteen-minutes-or-less\";\r\n                        }\r\n                        badges.push(<InfoPopup position='bottom center' content={<h5>{item}</h5>} trigger={<button className={badgeName}> </button>} />);\r\n                    });\r\n                }\r\n\r\n            }\r\n            //this.setState({translation: \"translate(500%,10%)\"});\r\n            let className = \"FoodItem fadeInLeft\" + i;\r\n            const config = {\r\n                onSwiped: ()=>this.endSwipe(),\r\n                onSwipedRight:()=>this.like(name),\r\n                onSwipedLeft:()=>this.dislike(name),\r\n                display:\"flex\",\r\n                preventDefaultTouchmoveEvent: true,\r\n                trackMouse: true,\r\n                transition: \"transform 1s ease\",\r\n                delta:10\r\n            };\r\n            let tryouy=1;\r\n            let swipingspecials=[];\r\n            if(this.state.showThumbs==name||this.state.translation!=undefined){\r\n                if(this.state.showThumbs==name||this.state.translation[name]!=undefined) {\r\n                    if(Math.abs(this.state.shadownr)>10){\r\n                        if (this.state.shadownr>0){\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimage\" />\r\n                                    <img className=\"dislikedimagewithshadow\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                        else{\r\n                            swipingspecials.push(\r\n                                <div>\r\n                                    <img className=\"likedimagewithshadow\" />\r\n                                    <img className=\"dislikedimage\" />\r\n                                </div>\r\n                            );\r\n                        }\r\n                    }\r\n                    else{\r\n                        swipingspecials.push(\r\n                            <div>\r\n                                <img className=\"likedimage\" />\r\n                                <img className=\"dislikedimage\" />\r\n                            </div>\r\n                        );\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n            // <button className={className} onClick={this.increaseCounter}\r\n            html.push(<div className=\"icanswipe\"  >\r\n                {swipingspecials}\r\n                <Swiping onSwiping={(eventData => this.swiped(eventData,name))}  {...config}  >\r\n                    <button   onMouseEnter={()=>this.setState({showThumbs:name})}\r\n                              onMouseLeave={()=>this.setState({showThumbs:\"\"})} className={className} style={{transform: this.transformfunc(name)\r\n                        , opacity: this.transparfunc(name)} } onClick={() => {}}  >\r\n                        <div className=\"rowbutton\">\r\n                            <div className=\"columbuttonimage\">\r\n                                <img className=\"FoodPhoto\" align=\"left\" src={this.getimage(i)} alt=\"Food\"/>\r\n                            </div>\r\n                            <div className=\"columtitle\">\r\n                                <div className=\"foodtitle2\"> <b className=\"FoodTitle\">{name}</b> <br/> </div>\r\n                                <div className=\"foodtags2\">\r\n                                    <div className=\"badgesContainer\">\r\n                                        {badges}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"informationbuttonscolum\">\r\n                                <div className=\"informationbutton1\" onClick={() => {this.logAction(\"get recipe\",name);this.sendRecipe(name)}}>\r\n                                    {this.recipePopup(foods[i],this.getimage(i))}\r\n                                </div>\r\n                                <div className=\"informationbutton2\" onClick={() => {this.logAction(\"get nutritional values\",name);this.sendNuttritionSimilar(name)}} >\r\n                                    {this.nutritionalPopup(foods[i])}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </button>\r\n                </Swiping>\r\n            </div>)\r\n        }\r\n\r\n        return html\r\n    }\r\n\r\n    transformfunc(name) {\r\n        if(this.state.translation!=undefined){\r\n            return this.state.translation[name];\r\n        }\r\n        return \"\";\r\n\r\n    }\r\n    transparfunc(name){\r\n        if(this.state.transparency!=undefined){\r\n            return this.state.transparency[name];\r\n        }\r\n        return 1;\r\n    }\r\n\r\n    like(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t=0;\r\n                for(let j=0;j<foods.length;j++){\r\n                    if(foods[j]!=undefined){\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if(f1===f2){\r\n                            t=j;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // alert(liked.length);\r\n                if( liked.length==undefined){\r\n                    let newliked=[];\r\n                    if(liked!=undefined){\r\n                        newliked.push(liked);\r\n                    }\r\n\r\n                    newliked.push(f2);\r\n                    liked=newliked;\r\n                }\r\n                else{\r\n\r\n                    liked.push(f2);\r\n                }\r\n\r\n                foods.splice(t,1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t,1);\r\n                this.setState({tags: tags});\r\n                images.splice(t,1);\r\n                this.setState({images: images});\r\n\r\n                this.setState({likedItems: liked});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"like\", name);\r\n                // alert(users[i].Liked);\r\n                break;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    unlike(name){\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let liked = users[i].Liked;\r\n\r\n                let t = 0;\r\n                for (let j = 0; j < liked.length; j++) {\r\n                    if(liked[j]!=undefined) {\r\n                        let f1 = liked[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                if (liked==undefined){\r\n                    liked=[];\r\n                }\r\n\r\n                liked.splice(t, 1);\r\n                let favorites=this.state.favorites;\r\n                favorites.splice(t,1);\r\n                this.setState({liked: liked});\r\n                this.setState({favorites: favorites});\r\n                users[i].Liked = liked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.setState({likedItems: liked});\r\n                this.logAction(\"unlike\", name);\r\n\r\n                break;\r\n            }\r\n            this.setState({favorite:true});\r\n        }\r\n\r\n    }\r\n    dislike(name){\r\n        if(name===\"\") name = this.state.foods[this.state.foods.length-1];\r\n        let f2 = name.toLowerCase();\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let disliked = users[i].Disliked;\r\n                let foods = this.state.foods;\r\n                let tags = this.state.tags;\r\n                let images = this.state.images;\r\n                let t = 0;\r\n                for (let j = 0; j < foods.length; j++) {\r\n                    if(foods[j]!=undefined) {\r\n                        let f1 = foods[j].toLowerCase();\r\n                        if (f1 === f2) {\r\n\r\n                            t = j;\r\n                        }\r\n                    }\r\n                }\r\n                foods.splice(t, 1);\r\n                this.setState({foods: foods});\r\n                tags.splice(t, 1);\r\n                this.setState({tags: tags});\r\n                images.splice(t, 1);\r\n                this.setState({images: images});\r\n\r\n                if (disliked == null) {\r\n                    disliked = [];\r\n                }\r\n                disliked.push(name);\r\n                this.setState({dislikedItems: disliked});\r\n                users[i].Disliked = disliked;\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                this.logAction(\"dislike\", name);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    logAction(thisAction, thisItem){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length-1; i>=0; i--){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                lastItem = thisItem;\r\n                lastAction = thisAction;\r\n                let item = [];\r\n                item.push(Date.now());\r\n                item.push(thisAction);\r\n                let v = 0;\r\n                if(JSON.parse(localStorage.getItem(\"viewInit\")) === 0){\r\n                    v = \"list mode\";\r\n                }\r\n                else v = \"tinder mode\";\r\n                item.push(v);\r\n                item.push(thisItem);\r\n                users[i].Log.push(item);\r\n                localStorage.setItem(\"users\", JSON.stringify(users));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    endSwipe(){\r\n        this.setState({swiping: false});\r\n        this.setState({shadownr: 0});\r\n        let item = {};\r\n        this.setState({translation: item, transparency: item});\r\n\r\n    }\r\n\r\n    swiped(eventData,name) {\r\n        this.setState({swiping: true});\r\n        this.setState({shadownr: eventData.deltaX});\r\n        //show smiles\r\n        let number=-1*eventData.deltaX;\r\n        let item = {};\r\n        item[name] = \"translate(\"+number+\"px,0%)\";\r\n        //alert(item[name]);\r\n        let item2 = {};\r\n        item2[name] = 10/Math.abs(eventData.deltaX);\r\n        this.setState({translation: item, transparency: item2});\r\n    }\r\n\r\n    getname(i){\r\n        if(this.state.foods!==undefined) {\r\n            return this.state.foods[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n    getimage(i) {\r\n        if(this.state.images!==undefined){\r\n            return this.state.images[i];\r\n        }\r\n        return \"\";\r\n    }\r\n\r\n\r\n    //RENDER\r\n    render() {\r\n\r\n        if(this.state.favorite){\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Favorites</b>\r\n                            <Link to=\"/profile\"><button title=\"profile\" className=\"profile\" ><b> </b></button></Link>\r\n                            <button className=\"favorites\" title=\"favorites\" onClick={this.goToFavorites} ><b></b></button>\r\n                            <button className=\"toRecommendButton\" title=\"recommends\" onClick={this.goToRecommends} ><b></b></button>\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n\r\n                </div>\r\n            );\r\n        }\r\n\r\n\r\n        // Favorites view\r\n        else{\r\n            return (\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                        <div className=\"PageHeader\"> <b className=\"PageTitle\">Let's get to know you!</b>\r\n\r\n                        </div>\r\n                        {this.generateView()}\r\n\r\n                    </header>\r\n                </div>\r\n            );\r\n\r\n        }\r\n        //<Link to=\"/recommendations\"><button onclick={() => localStorage.setItem(\"favorite\", JSON.stringify(true)} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n    }\r\n}\r\n\r\nexport default RecommendationsA\r\n","import React from 'react';\r\nimport './Profile.css';\r\n\r\nclass Checkbox extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isChecked: props.checked,\r\n            name: props.name,\r\n            id: props.id,\r\n            prefs : props.prefs\r\n        };\r\n    }\r\n    toggleChange = () => {\r\n        this.setState({\r\n            isChecked: !this.state.isChecked,\r\n        });\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                let prefs = users[i].booleansPreferences;\r\n                let all = users[i].booleanAllergies;\r\n                if (this.state.prefs === true) {\r\n\r\n                        prefs[this.state.id] = !prefs[this.state.id];\r\n                        users[i].booleansPreferences = prefs;\r\n\r\n                }\r\n                else {\r\n                        all[-this.state.id -1] = !all[-this.state.id -1];\r\n                        users[i].booleanAllergies = all;\r\n\r\n                }\r\n\r\n\r\n            }\r\n        }\r\n\r\n        localStorage.setItem(\"users\", JSON.stringify(users))\r\n    }\r\n    render() {\r\n        return (\r\n            <li>\r\n                <input type=\"checkbox\"\r\n                       checked={this.state.isChecked}\r\n                       onChange={this.toggleChange}\r\n                       id={this.state.id}\r\n                />\r\n            <label for={this.state.id}>\r\n                {this.state.name}\r\n            </label>\r\n            </li>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Checkbox;","import React from 'react';\r\nimport './Profile.css';\r\nimport { Link } from 'react-router-dom';\r\nimport Checkbox from \"./checkBox\";\r\nimport Swal, {clickCancel, clickConfirm} from 'sweetalert2';\r\n\r\nclass Profile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        let alreadySet = false;\r\n        this.amountOfLikes = 0;\r\n        this.amountOfDislikes = 0;\r\n        if(localStorage.getItem('users') != null){\r\n            let users = JSON.parse(localStorage.getItem('users'));\r\n            for(let i = 0; i<users.length; i++){\r\n                if(users[i].Name === localStorage.getItem('currentUser')){\r\n                    if(users[i].Preferences && users[i].Preferences.length && users[i].Allergies&& users[i].Preferences){\r\n                        alreadySet = true;\r\n                        this.amountOfDislikes = users[i].Allergies.length;\r\n                        this.amountOfLikes = users[i].Preferences.length;\r\n                        break;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n        if(!alreadySet){\r\n            let list = [];\r\n        }\r\n        this.items = ['60-minutes-or-less', 'time-to-make', 'course', 'main-ingredient', 'cuisine', 'preparation', 'occasion', 'north-american', 'side-dishes', 'vegetables', 'mexican', 'easy', 'fall', 'holiday-event', 'vegetarian', 'winter', 'dietary', 'christmas', 'seasonal', 'squash', '30-minutes-or-less', 'breakfast', 'main-dish', 'pork', 'american', 'oven', 'kid-friendly', 'pizza', 'northeastern-united-states', 'meat', 'equipment', 'chili', 'crock-pot-slow-cooker', '4-hours-or-less', 'eggs-dairy', 'potatoes', 'dinner-party', 'easter', 'cheese', 'stove-top', 'new-years', 'thanksgiving', 'independence-day', 'st-patricks-day', 'valentines-day', 'inexpensive', 'brunch', 'superbowl', 'presentation', 'served-hot', 'weeknight', 'canning', 'condiments-etc', 'heirloom-historical', 'amish-mennonite', 'number-of-servings', 'technique', '15-minutes-or-less', 'low-protein', '5-ingredients-or-less', 'beverages', 'fruit', 'low-sodium', 'shakes', 'low-calorie', 'low-in-something', 'apples', 'served-cold', '3-steps-or-less', 'appetizers', 'canadian', 'vegan', 'freezer', 'south-west-pacific', 'hawaiian', 'spicy', 'copycat', 'pork-ribs', 'super-bowl', 'novelty', 'taste-mood', 'savory', 'sweet', 'pies-and-tarts', 'desserts', 'lunch', 'snacks', 'no-cook', 'refrigerator', 'frozen-desserts', 'pies', 'chocolate', 'breads', 'oamc-freezer-make-ahead', 'quick-breads', 'tropical-fruit', 'bananas', 'healthy', '1-day-or-more', 'comfort-food', 'berries', 'strawberries', 'beans', 'potluck', 'to-go', 'greens', 'collard-greens', 'pork-chops', 'southwestern-united-states', 'deep-fry', 'candy', 'beef', 'one-dish-meal', 'lactose', 'bisques-cream-soups', 'soups-stews', 'spring', 'food-processor-blender', 'free-of-something', 'cauliflower', 'small-appliance', 'beginner-cook', 'low-cholesterol', 'low-carb', 'healthy-2', 'spinach', 'low-saturated-fat', 'high-calcium', 'high-in-something', 'very-low-carbs', 'sauces', 'eggs', 'savory-sauces', 'asian', 'indian', 'herb-and-spice-mixes', 'cooking-mixes', 'peppers', 'poultry', 'chicken', 'gluten-free', 'californian', 'black-beans', 'grilling', 'picnic', 'cookies-and-brownies', 'bar-cookies', 'brownies', 'gifts', 'casseroles', 'ground-beef', 'wild-game', 'deer', 'low-fat', 'summer', 'toddler-friendly', 'mixer', 'clear-soups', 'salads', 'pasta', 'pasta-rice-and-grains', 'for-large-groups', 'muffins', 'sandwiches', 'cakes', 'nuts', 'pineapple', 'corn', 'german', 'european', 'yeast', 'italian', 'lasagna', 'omelets-and-frittatas', 'for-1-or-2', 'romantic', 'ramadan', 'chicken-breasts', 'diabetic', 'dips', 'barbecue', 'marinades-and-rubs', 'finger-food', 'infant-baby-friendly', 'roast', 'veal', 'garnishes', 'cheesecake', 'grains', 'wedding', 'kosher', 'high-protein', 'mushrooms', 'seafood', 'fish', 'tuna', 'saltwater-fish', 'elbow-macaroni', 'pancakes-and-waffles', 'midwestern', 'southern-united-states', 'chicken-thighs-legs', 'salmon', 'indonesian', 'soy-tofu', 'tempeh', 'spreads', 'beef-ribs', 'grapes', 'smoothies', 'bacon', 'broil', 'pacific-northwest', 'tomatoes', 'cocktails', 'no-shell-fish', 'squid', 'polish', 'chinese', 'steam', 'onions', 'british-columbian', 'broccoli', 'kwanzaa', 'meatloaf', 'simply-potatoes2', 'rolled-cookies', 'drop-cookies', 'cake-fillings-and-frostings', 'lettuces', 'stews', 'lentils', 'danish', 'scandinavian', 'swiss', 'swedish', 'french', 'from-scratch', 'microwave', 'granola-and-porridge', 'bread-machine', 'asparagus', 'gumbo', 'african', 'cajun', 'shrimp', 'creole', 'shellfish', 'savory-pies', 'salad-dressings', 'orange-roughy', 'leftovers', 'simply-potatoes', 'crab', 'mango', 'curries', 'egg-free', 'roast-beef', 'pork-sausage', 'brown-bag', 'turkey', 'whole-turkey', 'green-yellow-beans', 'beef-sausage', 'australian', 'rice', 'brown-rice', 'white-rice', 'long-grain-rice', 'caribbean', 'central-american', 'stuffings-dressings', 'english', 'spaghetti', 'coconut', 'quebec', 'freshwater-fish', 'catfish', 'middle-eastern', 'lebanese', 'ravioli-tortellini', 'steak', 'clams', 'rolls-biscuits', 'gelatin', 'greek', 'citrus', 'oranges', 'papaya', 'punch', 'pitted-fruit', 'peaches', 'moose', 'wings', 'pasta-shells', 'blueberries', 'fudge', 'celebrity', 'south-american', 'sweet-sauces', 'russian', 'pork-loins', 'ham', 'burgers', 'biscotti', 'peanut-butter', 'baja', 'halloween', 'dairy-free', 'high-fiber', 'zucchini', 'puddings-and-mousses', 'japanese', 'lemon', 'chick-peas-garbanzos', 'cobblers-and-crisps', 'lamb-sheep', 'flat-shapes', 'turkey-burgers', 'carrots', 'penne', 'micro-melanesia', 'yams-sweet-potatoes', 'cinco-de-mayo', 'native-american', 'artichoke', 'salsas', 'cupcakes', 'puerto-rican', 'stir-fry', 'hand-formed-cookies', 'spanish', 'steaks', 'irish', 'scones', 'oaxacan', 'lime', 'camping', 'thai', 'polynesian', 'melons', 'jewish-ashkenazi', 'hanukkah', 'rosh-hashana', 'iraqi', 'saudi-arabian', 'whole-chicken', 'sourdough', 'baking', 'medium-grain-rice', 'pakistani', 'scottish', 'chutneys', 'somalian', 'non-alcoholic', 'mardi-gras-carnival', 'ontario', 'raspberries', 'crusts-pastry-dough-2', 'coffee-cakes', 'memorial-day', 'tex-mex', 'south-african', 'passover', 'new-zealand', '', 'chowders', 'pressure-cooker', 'whitefish', 'halibut', 'bok-choys', 'pennsylvania-dutch', 'ice-cream', 'pears', 'scallops', 'pheasant', 'water-bath', 'stocks', 'tarts', 'chinese-new-year', 'chicken-livers', 'manicotti', 'szechuan', 'birthday', 'nut-free', 'fillings-and-frostings-chocolate', 'jams-and-preserves', 'unprocessed-freezer', 'cherries', 'chard', 'tilapia', 'colombian', 'welsh', 'short-grain-rice', 'kiwifruit', 'breakfast-eggs', 'eggs-breakfast', 'czech', 'filipino', 'turkey-breasts', 'cuban', 'perch', 'smoker', 'college', 'belgian', 'costa-rican', 'guatemalan', 'honduran', 'finnish', 'moroccan', 'a1-sauce', 'avocado', 'jellies', 'labor-day', 'iranian-persian', 'jewish-sephardi', 'dutch', 'pumpkin', 'cod', 'sole-and-flounder', 'plums', 'turkish', 'portuguese', 'soul', 'hungarian', 'georgian', 'brazilian', 'nigerian', 'ethiopian', 'fathers-day', 'sudanese', 'congolese', 'ecuadorean', 'mussels', 'peruvian', 'meatballs', 'egyptian', 'argentine', 'mahi-mahi', 'chilean', 'hidden-valley-ranch', 'dehydrator', 'crawfish', 'oatmeal', 'reynolds-wrap', 'malaysian', 'duck', 'rosh-hashanah', 'nepalese', 'eggplant', 'goose', 'icelandic', 'veggie-burgers', 'mothers-day', 'mashed-potatoes', 'chocolate-chip-cookies', 'vietnamese', 'elk', 'oysters', 'palestinian', 'rabbit', 'norwegian', 'lobster', 'main-dish-beef', 'beef-crock-pot', 'pot-roast', 'hunan', 'austrian', 'halloween-cocktails', 'libyan', 'april-fools-day', 'beef-organ-meats', 'beef-liver', 'angolan', 'korean', 'cantonese', 'whole-duck', 'halloween-cupcakes', 'halloween-cakes', 'ragu-recipe-contest', 'macaroni-and-cheese', 'trout', 'irish-st-patricks-day', 'bass', 'beijing', 'quail', 'pickeral', 'main-dish-chicken', 'bear', 'brewing', 'cambodian', 'beef-kidney', 'beef-sauces', 'spaghetti-sauce', 'heirloom-historical-recipes', 'pot-pie', 'dips-lunch-snacks', 'pressure-canning', 'main-dish-pork', 'pork-loins-roast', 'quiche', 'sugar-cookies', 'venezuelan', 'octopus', 'side-dishes-beans', 'beans-side-dishes', 'baked-beans', 'snacks-kid-friendly', 'snacks-sweet', 'duck-breasts', 'main-dish-pasta', 'pasta-salad', 'pasta-elbow-macaroni', 'namibian', 'mushroom-soup', 'beef-barley-soup', 'pork-crock-pot', 'crock-pot-main-dish', 'desserts-fruit', 'desserts-easy', 'lasagne', 'laotian', 'cabbage', 'prepared-potatoes', 'middle-eastern-main-dish', 'high-in-something-diabetic-friendly', 'dips-summer', 'black-bean-soup', 'bean-soup', 'served-hot-new-years', 'ham-and-bean-soup', 'lamb-sheep-main-dish', 'mongolian', 'for-large-groups-holiday-event', 'stews-poultry', 'pasta-rice-and-grains-elbow-macaroni', 'pork-loin', 'cranberry-sauce', 'marinara-sauce', 'breakfast-casseroles', 'breakfast-potatoes', 'main-dish-seafood', 'shrimp-main-dish', 'pumpkin-bread', 'bread-pudding', 'less_thansql:name_topics_of_recipegreater_than', 'chicken-crock-pot', 'chicken-stews', 'chicken-stew', 'Throw the ultimate fiesta with this sopaipillas recipe from Food.com.', 'roast-beef-main-dish', 'roast-beef-comfort-food'];\r\n\r\n        this.state = {\r\n            boxes: this.getItemLocal(\"boxes\"),\r\n            suggestionsLiked: [],\r\n            suggestionsDisliked: [],\r\n            textLiked: '',\r\n            textDisliked: ''\r\n        };\r\n\r\n        this.success = this.success.bind(this);\r\n        this.updateAccount = this.updateAccount.bind(this);\r\n\r\n    }\r\n\r\n\r\n    getItemLocal(name) {\r\n        return (JSON.parse(localStorage.getItem(name)))\r\n    }\r\n\r\n    getRender() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        let tempIndex = -1;\r\n        for (let i = users.length-1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                tempIndex = i;\r\n                localStorage.setItem(\"favorite\", JSON.stringify(false));\r\n                if (users[i].FirstTime){\r\n\r\n                    Swal.fire({\r\n                        title: 'Welcome!',\r\n                        text: \"Let's set you up! First, choose your preferences and things you dislike, like allergies for example.\",\r\n                        icon: 'info',\r\n                        confirmButtonText: 'Okay!'\r\n                    });\r\n\r\n                    users[i].FirstTime = false;\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        let returnVal = [];\r\n        let returnList = [];\r\n        returnVal.push( <h3> Things you like </h3>);\r\n        const {textLiked} = this.state;\r\n        const {textDisliked} = this.state;\r\n\r\n        for (let i = 0; i < this.amountOfLikes; i++) {\r\n            returnList.push(<Checkbox name={users[tempIndex].Preferences[i]} checked={users[tempIndex].booleansPreferences[i]} id={i} prefs={true}/>)\r\n        }\r\n\r\n\r\n        returnVal.push(<div class={\"container\"}><ul class={\"ks-cboxtags\"}> {returnList} </ul></div>);\r\n        returnVal.push( <input className=\"textBoxAdd\" value={textLiked}  onChange={this.onTextChangedLiked}  type={'text'}/>);\r\n        returnVal.push(this.renderSuggestionsLiked());\r\n        returnVal.push(<input className=\"addButton\" type={\"submit\"} value={\"Add something you like\"} onClick={() =>this.doChange(textLiked, 1)}/>);\r\n        returnVal.push(<h3> Things you dislike </h3>);\r\n        returnList = [];\r\n        for (let i = 0; i <  this.amountOfDislikes; i++) {\r\n            returnList.push(<Checkbox name={users[tempIndex].Allergies[i]} checked={users[tempIndex].booleanAllergies[i]} id={-i-1} prefs={false}/>)\r\n        }\r\n\r\n        returnVal.push(<div class={\"container\"}><ul class={\"ks-cboxtags\"}> {returnList} </ul></div>);\r\n        returnVal.push( <input className=\"textBoxAdd\" value={textDisliked}  onChange={this.onTextChangedDisliked}  type={'text'}/>);\r\n        returnVal.push(this.renderSuggestionsDisliked());\r\n        returnVal.push(<input className=\"addButton\" type={\"submit\"} value={\"Add something you dislike\"} onClick={() =>this.doChange(textDisliked, 2)}/>);\r\n        return returnVal\r\n\r\n    }\r\n\r\n    success() {\r\n\r\n\r\n    }\r\n    updateAccount(){\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++){\r\n            if(users[i].Name === localStorage.getItem('currentUser')){\r\n                //let prefAndAllergies = JSON.parse(localStorage.getItem('boxes'));\r\n                //users[i].booleanAllergies = prefAndAllergies.slice(0, this.amountOfLikes);\r\n                //users[i].booleansPreferences = prefAndAllergies.slice(this.amountOfLikes+1, this.amountOfLikes+this.amountOfDislikes);\r\n                break;\r\n\r\n            }\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n        this.success();\r\n    }\r\n\r\n    renderButton() {\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for (let i = users.length -1; i>=0; i--) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                if (users[i].FirstTime1){\r\n\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n                   return <Link to=\"/recommendations\"><button className=\"NextButton Green\" onClick={this.updateAccount}><b>Recommend!</b></button></Link>\r\n\r\n                }\r\n                else\r\n                    return <Link to=\"/recommendations\"><button className=\"NextButton Green\" onClick={this.updateAccount}><b>Recommend!</b></button></Link>\r\n            }\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onTextChangedLiked = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        if(value.length > 0){\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v));\r\n        }\r\n        this.setState(() => ({suggestionsLiked: suggestions, textLiked: value}));\r\n    }\r\n    onTextChangedDisliked = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        if(value.length > 0){\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v));\r\n        }\r\n\r\n        this.setState(() => ({suggestionsDisliked: suggestions, textDisliked: value}));\r\n    }\r\n    suggestionSelectedLiked(value){\r\n\r\n        this.setState(()=>({\r\n            textLiked: value,\r\n            suggestionsLiked: []\r\n        }))\r\n        this.state.textLiked = value;\r\n    }\r\n    suggestionSelectedDisliked(value){\r\n        this.setState(()=>({\r\n            textDisliked: value,\r\n            suggestionsDisliked: []\r\n        }))\r\n        this.state.textDisliked = value;\r\n    }\r\n    renderSuggestionsLiked(){\r\n\r\n        const {suggestionsLiked} = this.state;\r\n\r\n        if(suggestionsLiked.length === 0 ){\r\n            return null;\r\n        }\r\n        return(\r\n            <div className={\"AutoCompleteText\"}>\r\n            <ul>\r\n                {suggestionsLiked.map((i) => <li onClick={() =>this.suggestionSelectedLiked(i)}>{i}</li>)}\r\n            </ul>\r\n            </div>\r\n        );\r\n    }\r\n    renderSuggestionsDisliked(){\r\n\r\n        const {suggestionsDisliked} = this.state;\r\n\r\n        if(suggestionsDisliked.length === 0 ){\r\n            return null;\r\n        }\r\n        return(\r\n            <div className={\"AutoCompleteText\"}>\r\n                <ul>\r\n                    {suggestionsDisliked.map((i) => <li onClick={() =>this.suggestionSelectedDisliked(i)}>{i}</li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n    doChange(item, buttonNb){\r\n        let items = this.items;\r\n        let users = JSON.parse(localStorage.getItem('users'));\r\n        for(let i = 0; i<users.length; i++) {\r\n            if (users[i].Name === localStorage.getItem('currentUser')) {\r\n                if(items.includes(item) && item!==''){\r\n                    if(buttonNb === 1){\r\n                        users[i].Preferences.push(item);\r\n                        users[i].booleansPreferences.push(true);\r\n                        this.amountOfLikes = this.amountOfLikes + 1;\r\n                        this.setState(() => ({textLiked: item}));\r\n\r\n                    }\r\n                    else if(buttonNb === 2){\r\n                        users[i].Allergies.push(item);\r\n                        users[i].booleanAllergies.push(true);\r\n                        this.amountOfDislikes = this.amountOfDislikes + 1;\r\n                        this.setState(() => ({textDisliked: item}));\r\n\r\n                    }\r\n                    items.splice(this.items.indexOf(item),1);\r\n                    this.items = items\r\n\r\n                    break;\r\n                }\r\n            }\r\n\r\n        }\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n    }\r\n    render() {\r\n\r\n        return (\r\n\r\n            <div className=\"App\">\r\n                <div className=\"PageHeader\"> <b className=\"PageTitle\">Your profile</b>\r\n                    <Link to=\"/profile\"><button className=\"profile\" ><b> </b></button></Link>\r\n                    <Link to=\"/recommendations\"><button onClick={() => {localStorage.setItem(\"favorite\", JSON.stringify(true));}} title=\"favorites\" className=\"favorites\" ><b> </b></button></Link>\r\n                    <Link to=\"/recommendations\"><button onClick={() => localStorage.setItem(\"favorite\", JSON.stringify(false))} title=\"recommends\" className=\"toRecommendButton\" ><b> </b></button></Link>\r\n\r\n                </div>\r\n                <header className=\"App-header\">\r\n                    {this.getRender()}\r\n                    {this.renderButton()}\r\n\r\n\r\n                </header>\r\n            </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n// eslint-disable-next-line\r\nimport { HashRouter as Router, Route, Switch} from 'react-router-dom';\r\nimport Home from './pages/home';\r\nimport Recommendations from './pages/recommendations';\r\nimport TinderCards from './pages/tinderCards';\r\nimport UserSelection from './pages/userSelection';\r\nimport GettingToKnow from './pages/gettingToKnow';\r\nimport SwipeTest from './pages/SwipeTest';\r\nimport RecommendationsA from \"./pages/recommendationsA\";\r\n\r\nimport './App.css';\r\nimport Profile from \"./pages/profile\";\r\n\r\n\r\n\r\nclass App extends Component {\r\n\r\n\r\n\r\n\r\n    sendmessage(message){\r\n        let socket = new WebSocket(\"ws://localhost:9000\");\r\n        //get an amount of recommends\r\n        // account is acount factors\r\n        //amount is the number of things to recommend\r\n        //prolist is the list of previously liked recipes each as a string of the name\r\n        let payload = {\r\n                action: \"Recommend\",\r\n                account: {vegan: 1, easy: 1, preparation: 1},\r\n                amount: 3,\r\n                prolist: [{name:\"hot tamale  burgers\", rating:0.5},{name:\"hot tamale  burgers\", rating:0.5}]\r\n            }\r\n        ;\r\n\r\n        //example output\r\n        let recipeoutput= {\r\n           // recommends1=[{name:\"hot tamale  burgers\"}];\r\n\r\n        }\r\n\r\n        //get similar elements\r\n        //recipe is the name ofe recipe to get similar to\r\n        //prolist is the list of previously liked recipes each as a string of the name\r\n        let Similar={\r\n            action: \"Similar\",\r\n            recipe: \"hot tamale  burgers\",\r\n            prolist: [{name:\"hot tamale  burgers\", rating:0.5}]\r\n        }\r\n        //get the recipe of an element\r\n        //recipe is the name of the recipe to get the similar element to\r\n        let Recipe={\r\n            action: \"Recipe\",\r\n            recipe: \"little kick  jalapeno burgers\"\r\n\r\n        }\r\n        this.socket.send(message);\r\n    }\r\n\r\n    startwebsocket(){\r\n        this.socket=new WebSocket(\"ws://localhost:9000\");\r\n\r\n        let payload={\r\n            action: \"initialise\"\r\n        }\r\n        this.socket.onopen = () => {\r\n            this.socket.send(JSON.stringify(payload));\r\n            // do something after connection is opened\r\n        }\r\n        this.socket.onmessage = (message) => {\r\n            this.initialised=true;\r\n\r\n            // handle message from backend\r\n        }\r\n    }\r\n\r\n    render() {\r\n        this.initialised=false;\r\n        this.startwebsocket();\r\n        /*\r\n        while(!this.initialised){\r\n            //await sleep(500);\r\n        }\r\n        */\r\n\r\n\r\n\r\n        return (\r\n            <Router basename=\"/react-auth-ui/\">\r\n                <div className=\"App\">\r\n                    <Switch>\r\n                        <Route exact path=\"/test\" component={SwipeTest}></Route>\r\n                        <Route exact path=\"/\" component={UserSelection}></Route>\r\n                        <Route exact path=\"/recommendations\" component={Recommendations}></Route>\r\n                        <Route exact path=\"/profile\" component={Profile}></Route>\r\n                        <Route exact path=\"/tinderCards\" component={TinderCards}></Route>\r\n                        <Route exact path=\"/home\" component={Home}></Route>\r\n                        <Route exact path=\"/gettingToKnow\" component={Recommendations}></Route>\r\n                        <Route exact path=\"/recommendationsA\" component={RecommendationsA}></Route>\r\n\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        );\r\n    }\r\n\r\n    static socketchange(f) {\r\n        this.socket.onopen=f;\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}